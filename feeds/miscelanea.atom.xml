<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Linux Sysadmin - Miscelánea</title><link href="https://www.linuxsysadmin.ml/" rel="alternate"></link><link href="https://www.linuxsysadmin.ml/feeds/miscelanea.atom.xml" rel="self"></link><id>https://www.linuxsysadmin.ml/</id><updated>2018-10-08T10:00:00+02:00</updated><entry><title>He acabado migrando de python 2 a 3</title><link href="https://www.linuxsysadmin.ml/2018/10/he-acabado-migrando-de-python-2-a-3.html" rel="alternate"></link><published>2018-10-08T10:00:00+02:00</published><updated>2018-10-08T10:00:00+02:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2018-10-08:/2018/10/he-acabado-migrando-de-python-2-a-3.html</id><summary type="html">&lt;p&gt;He sido fan de &lt;strong&gt;python&lt;/strong&gt; desde hace muchos años. Inicialmente lo empecé a utilizar porque, junto a &lt;strong&gt;bash&lt;/strong&gt;, era la herramienta que venía por defecto en todos los servidores que administraba. Pero con el tiempo salió la versión 3, incompatible con la 2; al final me ha tocado migrar forzadamente …&lt;/p&gt;</summary><content type="html">&lt;p&gt;He sido fan de &lt;strong&gt;python&lt;/strong&gt; desde hace muchos años. Inicialmente lo empecé a utilizar porque, junto a &lt;strong&gt;bash&lt;/strong&gt;, era la herramienta que venía por defecto en todos los servidores que administraba. Pero con el tiempo salió la versión 3, incompatible con la 2; al final me ha tocado migrar forzadamente.&lt;/p&gt;
&lt;p&gt;La primera versión de &lt;strong&gt;python&lt;/strong&gt; salió en 1991, y la segunda versión se publicó en el año 2000. Cuando salió la versión 3 en el año 2008 se decidieron cambios en el lenguaje que lo hicieron incompatible con al versión 2, mucho más extendida. Como en el 2010 salió la versión 2.7, todos creimos que seguiríamos usando la segunda versión.&lt;/p&gt;
&lt;p&gt;Las librerías existentes en la versión 2 tuvieron que adaptarse para soportar la nueva versión y la antigua, y habiendo cientos de ellas, el proceso encontró una severa resistencia, aunque con el tiempo casi todas las librerías han pasado por el aro.&lt;/p&gt;
&lt;p&gt;Los desarrolladores tardaron todavía más en migrar de versión, puesto que les faltaban las librerías habituales en la nueva versión; en el mundo de sistemas la resistencia fue todavía mayor: casi todas las distribuciones usaban por defecto la versión 2, y los lentos ciclos de lanzamiento de sus versiones no ayudaron a mejorar la situación.&lt;/p&gt;
&lt;p&gt;Yo fuí uno de esos usuarios de &lt;strong&gt;python&lt;/strong&gt; que creían que &lt;strong&gt;python 3&lt;/strong&gt; estaba condenado al fracaso, y me dije a mí mismo que nunca iba a migrar de versión. Los motivos fueron varios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Los sistemas operativos usaban &lt;strong&gt;python 2&lt;/strong&gt; por defecto, con la notable excepción de &lt;strong&gt;ArchLinux&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Algunas de las herramientas de sistemas, como &lt;strong&gt;fabric&lt;/strong&gt; o &lt;strong&gt;ansible&lt;/strong&gt; carecían de soporte para &lt;strong&gt;python 3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;El código &lt;em&gt;legacy&lt;/em&gt; de mi sitio de trabajo seguía en &lt;strong&gt;python 2&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Algunos proyectos necesitaban de librerías o &lt;em&gt;frameworks&lt;/em&gt; que no estaban portados, como &lt;strong&gt;django&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Me equivocaba&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;La fecha de jubilación de &lt;strong&gt;python 2&lt;/strong&gt; ha llegado; la versión 2.7 era solamente un intento de acercar gramáticas hacia la versión 3. El final de la segunda versión es inapelable, con incluso &lt;a href="https://pythonclock.org/"&gt;un contador de marcha atrás&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si hay que elegir una versión, en &lt;a href="https://wiki.python.org/moin/Python2orPython3"&gt;el sitio web&lt;/a&gt; son claros:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 2.x is legacy, Python 3.x is the present and future of the language  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Todos los puntos que me aferraban a la segunda versión se están diluyendo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Aunque los sistemas operativos siguen teniendo la versión 2 por defecto, pero:&lt;ul&gt;
&lt;li&gt;El modelo de trabajo con contenedores nos desacopla de las necesidades del sistema principal&lt;/li&gt;
&lt;li&gt;Siempre hay un servicio que necesita la 3; esto nos proporciona ambas versiones&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Todas las herramientas necesarias para un DevOps soportan &lt;strong&gt;python 3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;En mi nuevo trabajo no se desarrolla en &lt;strong&gt;python&lt;/strong&gt;, y en las compañías que lo hacen, se migra controladamente utilizando contenedores&lt;/li&gt;
&lt;li&gt;Las librerías y &lt;em&gt;frameworks&lt;/em&gt; principales ya funcionan en &lt;strong&gt;python 3&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Django&lt;/strong&gt; lo soporta desde la versión 1.5&lt;/li&gt;
&lt;li&gt;Solamente un puñado de librerías &lt;a href="https://python3wos.appspot.com/"&gt;no han sido portadas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Las grandes compañías (&lt;strong&gt;Google&lt;/strong&gt;, &lt;strong&gt;Facebook&lt;/strong&gt;, &lt;strong&gt;Instagram&lt;/strong&gt;...) han apostado fuerte por la nueva versión, que no para de recibir mejoras de rendimiento y funcionalidad. Visto el panorama, he decidido migrar yo también todas mis imágenes y proyectos a &lt;strong&gt;python 3&lt;/strong&gt; antes de que sea tarde para hacerlo. &lt;strong&gt;Es el momento&lt;/strong&gt;.&lt;/p&gt;</content><category term="python"></category><category term="migración"></category></entry><entry><title>Servidores "pets vs cattle"</title><link href="https://www.linuxsysadmin.ml/2018/08/servidores-pets-vs-cattle.html" rel="alternate"></link><published>2018-08-06T09:00:00+02:00</published><updated>2018-08-06T09:00:00+02:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2018-08-06:/2018/08/servidores-pets-vs-cattle.html</id><summary type="html">&lt;p&gt;Es muy divertido ir a una reunión con gente de negocio y decir algo como "tratamos los servidores como ganado". La cara que suelen poner es épica, en parte porque no conocen lo que eso significa, y en parte porque asocian ese término en otros ámbitos, como el ámbito ganadero …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Es muy divertido ir a una reunión con gente de negocio y decir algo como "tratamos los servidores como ganado". La cara que suelen poner es épica, en parte porque no conocen lo que eso significa, y en parte porque asocian ese término en otros ámbitos, como el ámbito ganadero.&lt;/p&gt;
&lt;p&gt;En el paradigma &lt;em&gt;legacy&lt;/em&gt; de tratar a los servidores, cuando un servidor se estropeaba o hacía cosas raras, todos teníamos que correr; se hacía lo imposible para restablecer ese mismo servidor. Hoy en día las cosas cambian: es más fácil crear un servidor nuevo y tenerlo listo de forma automatizada.&lt;/p&gt;
&lt;h2&gt;Pets vs cattle (mascotas vs ganado)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Randy Bias&lt;/strong&gt; narra la historia del término afirmando que probablemente se originó en 2011 o 2012, cuando &lt;strong&gt;Bill Baker&lt;/strong&gt; utilizó la analogía para describir las estrategias arquitectónicas de "escalado vertical" frente a "escalado horizontal". &lt;strong&gt;Bias&lt;/strong&gt; adoptó esta analogía en sus patrones arquitectónicos en la nube:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the old way of doing things, we treat our servers like pets, for example Bob the mail server. If Bob goes down, it’s all hands on deck. The CEO can’t get his email and it’s the end of the world. In the new way, servers are numbered, like cattle in a herd. For example, www001 to www100. When one server goes down, it’s taken out back, shot, and replaced on the line.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Pets vs cattle" src="https://www.linuxsysadmin.ml/images/pets_vs_cattle.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;¿Pero que son exactamente "mascotas" y "ganado"?&lt;/h2&gt;
&lt;p&gt;En el mundo actual, no nos importan demasiado los servidores; no es importante que funcione un servidor, sino dar servicio. Queremos algo como "4 instancias de la API" o "2 servidores con mi tienda online".&lt;/p&gt;
&lt;p&gt;De hecho, algunos servicios &lt;em&gt;cloud&lt;/em&gt; van tan lejos como vender &lt;em&gt;serverless&lt;/em&gt; o &lt;em&gt;function as a service&lt;/em&gt;, en donde no hay servidores, sino código. Con que se garantize que tu código se ejecute, basta; no nos importa donde, solo que se haga.&lt;/p&gt;
&lt;p&gt;Esto nos permite poner más valor a nuestro servicio y menos preocupaciones respecto a la infraestructura donde se ejecuta, lo que suele traducirse en un coste más acotado; podemos prescindir de operadores en favor de más desarrolladores o QAs.&lt;/p&gt;
&lt;h3&gt;Pets (mascotas)&lt;/h3&gt;
&lt;p&gt;Se trata de servidores que son irremplazables; si se estropea, corremos todos, y hay que restaurar el servicio &lt;em&gt;in-situ&lt;/em&gt;. En palabras de &lt;strong&gt;Bias&lt;/strong&gt;, sería algo así:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Servers or server pairs that are treated as indispensable or unique systems that can never be down. Typically they are manually built, managed, and “hand fed”. Examples include mainframes, solitary servers, HA loadbalancers/firewalls (active/active or active/passive), database systems designed as master/slave (active/passive), and so on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Cattle (ganado)&lt;/h3&gt;
&lt;p&gt;Son servidores que son fácilmente reemplazables; normalmente su pérdida importa poco y podemos reemplazarlos provisionando uno nuevo, normalmente de forma automatizada.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Arrays of more than two servers, that are built using automated tools, and are designed for failure, where no one, two, or even three servers are irreplaceable. Typically, during failure events no human intervention is required as the array exhibits attributes of “routing around failures” by restarting failed servers or replicating data through strategies like triple replication or erasure coding. Examples include web server arrays, multi-master datastores such as Cassandra clusters, multiple racks of gear put together in clusters, and just about anything that is load-balanced and multi-master.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;¿Son tus servidores mascotas o ganado?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><category term="pets vs cattle"></category></entry><entry><title>Una oda a Alpine Linux</title><link href="https://www.linuxsysadmin.ml/2018/07/una-oda-a-alpine-linux.html" rel="alternate"></link><published>2018-07-30T09:00:00+02:00</published><updated>2018-07-30T09:00:00+02:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2018-07-30:/2018/07/una-oda-a-alpine-linux.html</id><summary type="html">&lt;p&gt;Hace unos días salió la &lt;em&gt;release&lt;/em&gt; 3.8 de &lt;strong&gt;Alpine Linux&lt;/strong&gt;. Por problemas varios en el &lt;em&gt;build&lt;/em&gt;, la imagen de &lt;strong&gt;docker&lt;/strong&gt; se hizo esperar bastante, y como la paciencia no es una de mis virtudes, decidí darle un intento en una máquina virtual &lt;strong&gt;Virtualbox&lt;/strong&gt;, quedando gratamente complacido con el resultado …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hace unos días salió la &lt;em&gt;release&lt;/em&gt; 3.8 de &lt;strong&gt;Alpine Linux&lt;/strong&gt;. Por problemas varios en el &lt;em&gt;build&lt;/em&gt;, la imagen de &lt;strong&gt;docker&lt;/strong&gt; se hizo esperar bastante, y como la paciencia no es una de mis virtudes, decidí darle un intento en una máquina virtual &lt;strong&gt;Virtualbox&lt;/strong&gt;, quedando gratamente complacido con el resultado obtenido.&lt;/p&gt;
&lt;p&gt;El primer paso es descargar la imagen de &lt;a href="https://alpinelinux.org/downloads/"&gt;la pagina de descargas&lt;/a&gt;. En esta página hay que elegir la variante de la imagen y la variante del procesador; aplicando a mi máquina y sabiendo que voy a ejecutarlo como máquina virtual, he elegido &lt;a href="http://dl-cdn.alpinelinux.org/alpine/v3.8/releases/x86_64/alpine-virt-3.8.0-x86_64.iso"&gt;esta&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se trata de un fichero &lt;code&gt;.iso&lt;/code&gt; de 32mb que, a su vez, es un &lt;em&gt;livecd&lt;/em&gt; con el instalador incorporado. Es una distribución muy ligera, así que con una máquina virtual de 256mb de memoria funciona de sobras para la instalación base con SSH y nada más; modificaremos este valor cuando necesitemos más memoria para otro tipo de carga de trabajo.&lt;/p&gt;
&lt;p&gt;Iniciamos la máquina virtual con el CD montado, y obtenemos un &lt;em&gt;shell&lt;/em&gt;, previo &lt;em&gt;login&lt;/em&gt; con el usuario &lt;strong&gt;root&lt;/strong&gt; y sin contraseña. En este momento, estamos consumiendo 33mb de memoria (sin &lt;em&gt;buffers&lt;/em&gt;), lo que nos deja con más de 200mb disponibles para nuestro uso.&lt;/p&gt;
&lt;p&gt;Como &lt;em&gt;livecd&lt;/em&gt; es muy bonito, pero lo que queremos es &lt;strong&gt;instalar&lt;/strong&gt;. Esto se consigue con el &lt;em&gt;script&lt;/em&gt; &lt;code&gt;setup-alpine&lt;/code&gt;. Sin embargo, si nos leemos &lt;a href="https://wiki.alpinelinux.org/wiki/Alpine_setup_scripts#setup-disk"&gt;la documentación&lt;/a&gt; de los &lt;em&gt;scripts&lt;/em&gt; de la instalación veremos varias cosas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Por defecto, se crean 3 particiones:&lt;ul&gt;
&lt;li&gt;La partición raíz, montada en &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Una partición para los ficheros de &lt;em&gt;boot&lt;/em&gt;, montados en &lt;code&gt;/boot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Una partición de &lt;em&gt;swap&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;El instalador se puede parametrizar con variables de entorno&lt;ul&gt;
&lt;li&gt;Podemos modificar el tamaño de la particion &lt;code&gt;/boot&lt;/code&gt;, pero no eliminarla con &lt;code&gt;BOOT_SIZE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Podemos modificar el tamaño de la partición &lt;em&gt;swap&lt;/em&gt; con &lt;code&gt;SWAP_SIZE&lt;/code&gt;, incluso eliminándola con tamaño 0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Como pretendo modificar la &lt;em&gt;swap&lt;/em&gt; a posteriori, prefiero &lt;a href="https://www.linuxsysadmin.ml/2018/07/ampliando-la-memoria-swap-mediante-swapfiles.html"&gt;crear un &lt;em&gt;swapfile&lt;/em&gt;&lt;/a&gt;, y por lo tanto voy a anular la partición &lt;em&gt;swap&lt;/em&gt; indicando tamaño 0.&lt;/p&gt;
&lt;p&gt;Lanzamos el comando &lt;code&gt;SWAP_SIZE=0 setup-alpine&lt;/code&gt; para realizar la instalación. El proceso en sí mismo no tiene ninguna complicación y está listo en menos de 5 minutos; solo voy a detallar las opciones que he ido usando:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Teclado&lt;/strong&gt;: El que tengáis; pongo "es"&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hostname&lt;/strong&gt;: De momento "alpine"; cuando clone la máquina ya lo cambiaré&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Red&lt;/strong&gt;: Lo que os haga falta; yo he usado &lt;em&gt;eth0&lt;/em&gt; en modo &lt;em&gt;dhcp&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zona horaria&lt;/strong&gt;: Algo como "Europe" y luego "Madrid"&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mirrors de &lt;em&gt;apk&lt;/em&gt;&lt;/strong&gt;: Pongo "f"; es un proceso lento, pero a la larga vale la pena&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Servidor de SSH&lt;/strong&gt;: Voy a lo seguro, "openssh"&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clente de NTP&lt;/strong&gt;: Dejo el que viene por defecto "chrony"&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disco a usar&lt;/strong&gt;: El que tengáis, yo pongo "sda", usado como "sys", que es instalación tradicional&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Y con esto estamos. Reiniciamos sin el &lt;em&gt;live cd&lt;/em&gt; y ya estamos en nuestro nuevo y flamante servidor &lt;strong&gt;Alpine Linux&lt;/strong&gt;, que nos ocupa 26mb de memoria solamente.&lt;/p&gt;
&lt;h2&gt;Siguientes pasos&lt;/h2&gt;
&lt;p&gt;La instalación base está realmente bien, aunque algunas modificaciones nos van a venir muy bien; algunas son muy evidentes y otras son para nota.&lt;/p&gt;
&lt;h3&gt;Usuario nominal y sudo&lt;/h3&gt;
&lt;p&gt;Por defecto, &lt;strong&gt;Alpine Linux&lt;/strong&gt; solo crea el usuario &lt;strong&gt;root&lt;/strong&gt;, que encima, no puede entrar por SSH usando contraseña. Esto nos deja sin acceso al servidor.&lt;/p&gt;
&lt;p&gt;Siguiendo el estilo &lt;strong&gt;Ubuntu&lt;/strong&gt;, vamos a crear un usuario nominal con permisos de &lt;strong&gt;sudo&lt;/strong&gt;, y vamos a bloquear al usuario &lt;strong&gt;root&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~# apk add sudo
...
alpine:~# adduser gerard
...
alpine:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Alpine Linux&lt;/strong&gt; viene por defecto con el grupo &lt;strong&gt;wheel&lt;/strong&gt;, pero no con el grupo &lt;strong&gt;sudo&lt;/strong&gt;. Así pues, vamos a habilitar &lt;strong&gt;sudo&lt;/strong&gt; para todos los usuarios del grupo &lt;strong&gt;wheel&lt;/strong&gt;, al que añadiremos a nuestro usuario.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~# cat /etc/sudoers &lt;span class="p"&gt;|&lt;/span&gt; grep ^%wheel
%wheel &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;ALL&lt;span class="o"&gt;)&lt;/span&gt; ALL
alpine:~# adduser gerard wheel
alpine:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y nos logamos al servidor con el usuario nominal. Probamos que podemos hacer &lt;strong&gt;sudo&lt;/strong&gt; y si es así, bloqueamos el usuario &lt;strong&gt;root&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~$ id
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;gerard&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;gerard&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;wheel&lt;span class="o"&gt;)&lt;/span&gt;,1000&lt;span class="o"&gt;(&lt;/span&gt;gerard&lt;span class="o"&gt;)&lt;/span&gt;
alpine:~$ sudo id
&lt;span class="o"&gt;[&lt;/span&gt;sudo&lt;span class="o"&gt;]&lt;/span&gt; password &lt;span class="k"&gt;for&lt;/span&gt; gerard:
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;root&lt;span class="o"&gt;)&lt;/span&gt;,1&lt;span class="o"&gt;(&lt;/span&gt;bin&lt;span class="o"&gt;)&lt;/span&gt;,2&lt;span class="o"&gt;(&lt;/span&gt;daemon&lt;span class="o"&gt;)&lt;/span&gt;,3&lt;span class="o"&gt;(&lt;/span&gt;sys&lt;span class="o"&gt;)&lt;/span&gt;,4&lt;span class="o"&gt;(&lt;/span&gt;adm&lt;span class="o"&gt;)&lt;/span&gt;,6&lt;span class="o"&gt;(&lt;/span&gt;disk&lt;span class="o"&gt;)&lt;/span&gt;,10&lt;span class="o"&gt;(&lt;/span&gt;wheel&lt;span class="o"&gt;)&lt;/span&gt;,11&lt;span class="o"&gt;(&lt;/span&gt;floppy&lt;span class="o"&gt;)&lt;/span&gt;,20&lt;span class="o"&gt;(&lt;/span&gt;dialout&lt;span class="o"&gt;)&lt;/span&gt;,26&lt;span class="o"&gt;(&lt;/span&gt;tape&lt;span class="o"&gt;)&lt;/span&gt;,27&lt;span class="o"&gt;(&lt;/span&gt;video&lt;span class="o"&gt;)&lt;/span&gt;
alpine:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~$ sudo passwd -l root
passwd: password &lt;span class="k"&gt;for&lt;/span&gt; root changed by root
alpine:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creación de un swapfile&lt;/h3&gt;
&lt;p&gt;Como pretendíamos clonar esta imagen base, se decidió deshabilitar la partición &lt;em&gt;swap&lt;/em&gt; con &lt;code&gt;SWAP_SIZE=0&lt;/code&gt;. Esto nos deja si memoria &lt;em&gt;swap&lt;/em&gt;, y no es recomendable. Para poder redimensionar la memoria &lt;em&gt;swap&lt;/em&gt; en cada clon, lo fácil es &lt;a href="https://www.linuxsysadmin.ml/2018/07/ampliando-la-memoria-swap-mediante-swapfiles.html"&gt;crear la &lt;em&gt;swap&lt;/em&gt; en un fichero&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para ello solo hay que crear un fichero para tal uso, con el tamaño deseado y perteciendo a &lt;strong&gt;root&lt;/strong&gt;, con permisos 600. Lo formateamos como &lt;em&gt;swap&lt;/em&gt; y ya lo tenemos preparado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~$ sudo dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/swapfile &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1M &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;512&lt;/span&gt;
...
alpine:~$ sudo chmod &lt;span class="m"&gt;600&lt;/span&gt; /swapfile
alpine:~$ sudo mkswap /swapfile
...
alpine:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para que se monte automáticamente en cada &lt;em&gt;boot&lt;/em&gt;, se necesitan dos cosas: ponerlo en &lt;code&gt;/etc/fstab&lt;/code&gt; y tener el servicio &lt;strong&gt;swap&lt;/strong&gt; activado en &lt;strong&gt;boot time&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~$ grep swap /etc/fstab
/swapfile none swap sw &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
alpine:~$ sudo rc-update add swap
 * service swap added to runlevel default
alpine:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En el siguiente reinicio, la memoria &lt;em&gt;swap&lt;/em&gt; se activará sola. Para los que no tengáis paciencia para reiniciar, podéis levantar el servicio directamente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~$ sudo rc-service swap start
 * Activating swap devices ...                                                                                           &lt;span class="o"&gt;[&lt;/span&gt; ok &lt;span class="o"&gt;]&lt;/span&gt;
alpine:~$ free -m
             total       used       free     shared    buffers     cached
Mem:           &lt;span class="m"&gt;238&lt;/span&gt;        &lt;span class="m"&gt;231&lt;/span&gt;          &lt;span class="m"&gt;6&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;5&lt;/span&gt;        &lt;span class="m"&gt;196&lt;/span&gt;
-/+ buffers/cache:         &lt;span class="m"&gt;29&lt;/span&gt;        &lt;span class="m"&gt;208&lt;/span&gt;
Swap:          &lt;span class="m"&gt;511&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="m"&gt;511&lt;/span&gt;
alpine:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Los clones pueden limitarse a desactivar la &lt;em&gt;swap&lt;/em&gt; con &lt;code&gt;swapoff&lt;/code&gt;, recrear &lt;code&gt;/swapfile&lt;/code&gt; con el tamaño y los permisos adecuados, lanzar el &lt;code&gt;mkswap&lt;/code&gt; y volver a activarla con &lt;code&gt;swapon&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Limpiar configuraciones&lt;/h3&gt;
&lt;p&gt;Los ficheros de configuración son bastante correctos, pero no está de más revisar algunos de ellos, especialmente si clonamos esta máquina hay que cambiarlos en el clon:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/hostname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/network/interfaces&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/resolv.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/apk/repositories&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Carpetas ~/bin de usuario&lt;/h3&gt;
&lt;p&gt;Es muy útil que los usuarios tengan una carpeta &lt;code&gt;bin&lt;/code&gt; en su carpeta personal, para poner &lt;em&gt;scripts&lt;/em&gt; u otras utilidades. Eso se puede conseguir de dos formas: una global, o por usuario.&lt;/p&gt;
&lt;h4&gt;De forma global&lt;/h4&gt;
&lt;p&gt;Útil cuando queremos que se aplique a todos los usuarios; podemos editar &lt;code&gt;/etc/profile&lt;/code&gt;, o aprovecharnos de que se incluye todos los ficheros &lt;code&gt;.sh&lt;/code&gt; en &lt;code&gt;/etc/profile.d/&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~$ cat /etc/profile.d/local_bin.sh
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; -d ~/bin &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
alpine:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Este fichero necesita acabar en &lt;code&gt;.sh&lt;/code&gt;, pero no necesita permisos de ejecución; se incluye usando &lt;code&gt;source&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;De forma local&lt;/h4&gt;
&lt;p&gt;El &lt;em&gt;shell&lt;/em&gt; que viene con &lt;strong&gt;Alpine Linux&lt;/strong&gt; respeta la convención de leer el fichero &lt;code&gt;.profile&lt;/code&gt;. Podemos hacer el cambio individualmente para cada usuario; recordad que no se hace solo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alpine:~$ cat .profile
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; -d ~/bin &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
alpine:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;En este punto tengo un servidor mínimo con &lt;strong&gt;Alpine Linux&lt;/strong&gt;, que usa 27mb de memoria, ocupa 130mb de disco (&lt;em&gt;swapfile&lt;/em&gt; aparte) y con un magnífico gestor de paquetes, al que no le falta de nada.&lt;/p&gt;
&lt;p&gt;Los paquetes de la distribución no están a la última (tenéis la opción de la rama &lt;em&gt;edge&lt;/em&gt;), pero aún así están más actualizados que en &lt;strong&gt;Debian&lt;/strong&gt;, con un &lt;em&gt;focus&lt;/em&gt; importante en la seguridad. Si se instala un paquete, por ejemplo &lt;strong&gt;docker&lt;/strong&gt;, las dependencias son muy correctas, y no se trae ni &lt;strong&gt;python&lt;/strong&gt;, ni &lt;strong&gt;gcc&lt;/strong&gt;, ni &lt;strong&gt;git&lt;/strong&gt;, a diferencia de &lt;strong&gt;Debian&lt;/strong&gt;. Esto reduce la superficie de ataque y las herramientas disponibles en caso de intrusión.&lt;/p&gt;
&lt;p&gt;Yo lo he utilizado como nodo de un &lt;em&gt;docker swarm&lt;/em&gt;, con un disco de tamaño adecuado montado en &lt;code&gt;/var/lib/docker&lt;/code&gt; y un poco más de memoria disponible. Es un caso de éxito sin precedentes.&lt;/p&gt;</content><category term="alpine"></category><category term="linux"></category></entry><entry><title>Entornos de trabajo en contenedores Docker</title><link href="https://www.linuxsysadmin.ml/2018/03/entornos-de-trabajo-en-contenedores-docker.html" rel="alternate"></link><published>2018-03-05T10:00:00+01:00</published><updated>2018-03-05T10:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2018-03-05:/2018/03/entornos-de-trabajo-en-contenedores-docker.html</id><summary type="html">&lt;p&gt;Cuando usamos herramientas concretas para todos los miembros de un mismo equipo, suele ser problemático instalarlo en sus equipos. Por la ausencia de instalación y su gran reproducibilidad, es cada vez más frecuente distribuir esas herramientas en una imagen de &lt;strong&gt;Docker&lt;/strong&gt;, aunque esto no garantiza estar libres de otros problemas …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cuando usamos herramientas concretas para todos los miembros de un mismo equipo, suele ser problemático instalarlo en sus equipos. Por la ausencia de instalación y su gran reproducibilidad, es cada vez más frecuente distribuir esas herramientas en una imagen de &lt;strong&gt;Docker&lt;/strong&gt;, aunque esto no garantiza estar libres de otros problemas.&lt;/p&gt;
&lt;p&gt;El tema más problemático suele ser la diferencia entre el usuario del equipo y el del contenedor &lt;strong&gt;Docker&lt;/strong&gt;; un fichero guardado con el usuario &lt;em&gt;john&lt;/em&gt; en el contenedor pasaria a pertenecer, por ejemplo, al usuario &lt;em&gt;james&lt;/em&gt; en el &lt;em&gt;host&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Esto se debe a que el usuario se guarda en el disco como su identificador numérico, que luego se interpreta de acuerdo al fichero &lt;em&gt;/etc/passwd&lt;/em&gt; del sistema operativo que lo lea. Afortunadamente, este es un problema menor que puede ser solventado con un poco de habilidad.&lt;/p&gt;
&lt;h2&gt;Un ejemplo práctico: un contenedor para usar Python&lt;/h2&gt;
&lt;p&gt;Hay pocos motivos para no instalar &lt;strong&gt;python&lt;/strong&gt; directamente en el sistema &lt;em&gt;host&lt;/em&gt;; para su fácil distribución, para utilizar diferentes versiones o simplemente para disponer de ellas en un servidor donde no podríamos instalarlo normalmente por seguridad. Sin embargo es un ejemplo con alto valor didáctico.&lt;/p&gt;
&lt;p&gt;Empezaremos con una imagen que solo contenga los binarios que usamos habitualmente; vamos a montar la carpeta de trabajo desde el &lt;em&gt;host&lt;/em&gt; de &lt;strong&gt;docker&lt;/strong&gt;. Los binarios que suelo utilizar son los siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;li&gt;virtualenv&lt;/li&gt;
&lt;li&gt;pep8&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Así pues, nos limitaremos a utilizar un &lt;em&gt;Dockerfile&lt;/em&gt; básico con estas tres herramientas, y la distribución que más nos guste:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@atlantis:~/projects/pyenv$ cat Dockerfile
FROM alpine:3.6
RUN apk add --no-cache py-virtualenv py-pep8
gerard@atlantis:~/projects/pyenv$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: No se indica &lt;strong&gt;python&lt;/strong&gt; ya que es una dependencia de los otros paquetes.&lt;/p&gt;
&lt;h3&gt;El problema&lt;/h3&gt;
&lt;p&gt;Vamos a trabajar un poco con las nuevas herramientas, aunque solo sea para crear un proyecto vacío:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@atlantis:~/projects/pyenv$ docker run -ti --rm --volume /home/gerard/projects/pyenv/workspace:/workspace pyenv
/ &lt;span class="c1"&gt;# adduser -u 1200 gerard&lt;/span&gt;
Changing password &lt;span class="k"&gt;for&lt;/span&gt; gerard
New password:
Bad password: similar to username
Retype password:
passwd: password &lt;span class="k"&gt;for&lt;/span&gt; gerard changed by root
/ &lt;span class="c1"&gt;# cd workspace/&lt;/span&gt;
/workspace &lt;span class="c1"&gt;# echo &amp;#39;&amp;#39; &amp;gt; app.py&lt;/span&gt;
/workspace &lt;span class="c1"&gt;# su - gerard&lt;/span&gt;
4bf4f4abe9e2:~$ &lt;span class="nb"&gt;cd&lt;/span&gt; /workspace/
4bf4f4abe9e2:/workspace$ virtualenv env
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;&amp;quot;/usr/bin/virtualenv&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;11&lt;/span&gt;, in &amp;lt;module&amp;gt;
    load_entry_point&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;virtualenv==15.1.0&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;console_scripts&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;virtualenv&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)()&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/usr/lib/python2.7/site-packages/virtualenv.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;713&lt;/span&gt;, in main
    &lt;span class="nv"&gt;symlink&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;options.symlink&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/usr/lib/python2.7/site-packages/virtualenv.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;925&lt;/span&gt;, in create_environment
    &lt;span class="nv"&gt;site_packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;site_packages, &lt;span class="nv"&gt;clear&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;clear, &lt;span class="nv"&gt;symlink&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;symlink&lt;span class="o"&gt;))&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/usr/lib/python2.7/site-packages/virtualenv.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;1110&lt;/span&gt;, in install_python
    mkdir&lt;span class="o"&gt;(&lt;/span&gt;lib_dir&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/usr/lib/python2.7/site-packages/virtualenv.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;323&lt;/span&gt;, in mkdir
    os.makedirs&lt;span class="o"&gt;(&lt;/span&gt;path&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/usr/lib/python2.7/os.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;150&lt;/span&gt;, in makedirs
    makedirs&lt;span class="o"&gt;(&lt;/span&gt;head, mode&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/usr/lib/python2.7/os.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;150&lt;/span&gt;, in makedirs
    makedirs&lt;span class="o"&gt;(&lt;/span&gt;head, mode&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/usr/lib/python2.7/os.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;157&lt;/span&gt;, in makedirs
    mkdir&lt;span class="o"&gt;(&lt;/span&gt;name, mode&lt;span class="o"&gt;)&lt;/span&gt;
OSError: &lt;span class="o"&gt;[&lt;/span&gt;Errno &lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; Permission denied: &lt;span class="s1"&gt;&amp;#39;/workspace/env&amp;#39;&lt;/span&gt;
4bf4f4abe9e2:/workspace$ &lt;span class="nb"&gt;exit&lt;/span&gt;
/workspace &lt;span class="c1"&gt;# exit&lt;/span&gt;
gerard@atlantis:~/projects/pyenv$ tree -ug
.
├── &lt;span class="o"&gt;[&lt;/span&gt;gerard   gerard  &lt;span class="o"&gt;]&lt;/span&gt;  workspace
│   └── &lt;span class="o"&gt;[&lt;/span&gt;root     root    &lt;span class="o"&gt;]&lt;/span&gt;  app.py
└── &lt;span class="o"&gt;[&lt;/span&gt;gerard   gerard  &lt;span class="o"&gt;]&lt;/span&gt;  Dockerfile

&lt;span class="m"&gt;1&lt;/span&gt; directory, &lt;span class="m"&gt;2&lt;/span&gt; files
gerard@atlantis:~/projects/pyenv$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si trabajamos como &lt;em&gt;root&lt;/em&gt;, el fichero del &lt;em&gt;host&lt;/em&gt; queda con el propietario incorrecto, y si usamos un usuario con el mismo nombre, no tenemos garantias de que casen, siendo el caso peor el de no poder escribir en el entorno de trabajo.&lt;/p&gt;
&lt;p&gt;En mi caso, el usuario &lt;em&gt;gerard&lt;/em&gt; en el &lt;em&gt;host&lt;/em&gt; tiene identificador 1000, y he creado el usuario &lt;em&gt;gerard&lt;/em&gt; del contenedor con identificador 1200 adrede para que se evidencie el problema.&lt;/p&gt;
&lt;h3&gt;La solución&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; nos ofrece una solución muy interesante: podemos ejecutar un contenedor especificando el usuario, sea en modo texto o en modo numérico. Como en mi caso el usuario &lt;em&gt;gerard&lt;/em&gt; tiene identificador 1000 y el grupo &lt;em&gt;gerard&lt;/em&gt; también, basta con indicar el &lt;em&gt;flag&lt;/em&gt; &lt;code&gt;-u 1000:1000&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@atlantis:~/projects/pyenv/workspace$ docker run -ti --rm --volume /home/gerard/projects/pyenv/workspace:/workspace -u &lt;span class="m"&gt;1000&lt;/span&gt;:1000 pyenv
/ $ &lt;span class="nb"&gt;cd&lt;/span&gt; workspace/
/workspace $ &lt;span class="nb"&gt;echo&lt;/span&gt; aaa &amp;gt; run.py
/workspace $ virtualenv env
New python executable in /workspace/env/bin/python2
Also creating executable in /workspace/env/bin/python
Installing setuptools, pip, wheel...done.
/workspace $ ls -lh
total &lt;span class="m"&gt;8&lt;/span&gt;
drwxr-xr-x    &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;1000&lt;/span&gt;     &lt;span class="m"&gt;1000&lt;/span&gt;        &lt;span class="m"&gt;4&lt;/span&gt;.0K Nov &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:23 env
-rw-r--r--    &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1000&lt;/span&gt;     &lt;span class="m"&gt;1000&lt;/span&gt;           &lt;span class="m"&gt;4&lt;/span&gt; Nov &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:23 run.py
/workspace $ &lt;span class="nb"&gt;exit&lt;/span&gt;
gerard@atlantis:~/projects/pyenv/workspace$ ls -lh
total &lt;span class="m"&gt;8&lt;/span&gt;,0K
drwxr-xr-x &lt;span class="m"&gt;5&lt;/span&gt; gerard gerard &lt;span class="m"&gt;4&lt;/span&gt;,0K nov &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;:23 env
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; gerard gerard    &lt;span class="m"&gt;4&lt;/span&gt; nov &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;:23 run.py
gerard@atlantis:~/projects/pyenv/workspace$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;TRUCO&lt;/strong&gt;: Podemos usar el comando &lt;strong&gt;id&lt;/strong&gt; para sacar ambos valores numéricos de forma automatizable.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@atlantis:~/projects/pyenv/workspace$ docker run -ti --rm --volume /home/gerard/projects/pyenv/workspace:/workspace -u &lt;span class="k"&gt;$(&lt;/span&gt;id -u&lt;span class="k"&gt;)&lt;/span&gt;:&lt;span class="k"&gt;$(&lt;/span&gt;id -g&lt;span class="k"&gt;)&lt;/span&gt; pyenv
/ $ id
&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;
/ $
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y con esto los identificadores cuadran y no tenemos más problemas, aunque el identificador 1000 no se asocia con ningún usuario del contendor y se lista en modo numerico. La relación entre el valor numérico y nombre del usuario está en el fichero &lt;em&gt;/etc/passwd&lt;/em&gt; y el del grupo en &lt;em&gt;/etc/group&lt;/em&gt;; podemos simplemente mapear esos ficheros del &lt;em&gt;host&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@atlantis:~/projects/pyenv/workspace$ docker run -ti --rm -v /home/gerard/projects/pyenv/workspace:/workspace -u &lt;span class="k"&gt;$(&lt;/span&gt;id -u&lt;span class="k"&gt;)&lt;/span&gt;:&lt;span class="k"&gt;$(&lt;/span&gt;id -g&lt;span class="k"&gt;)&lt;/span&gt; -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group pyenv
/ $ ls workspace/ -lh
total &lt;span class="m"&gt;8&lt;/span&gt;
drwxr-xr-x    &lt;span class="m"&gt;5&lt;/span&gt; gerard   gerard      &lt;span class="m"&gt;4&lt;/span&gt;.0K Nov &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:23 env
-rw-r--r--    &lt;span class="m"&gt;1&lt;/span&gt; gerard   gerard         &lt;span class="m"&gt;4&lt;/span&gt; Nov &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:23 run.py
/ $
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Solo nos quedaría encapsular esa línea de comandos en un script para su fácil invocación, por ejemplo mapeando la carpeta actual al &lt;em&gt;workspace&lt;/em&gt; del contenedor, de la siguiente forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@atlantis:~/projects/newproject$ cat /home/gerard/bin/pyenv
&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;

docker run -ti --rm &lt;span class="se"&gt;\&lt;/span&gt;
  --user &lt;span class="k"&gt;$(&lt;/span&gt;id -u&lt;span class="k"&gt;)&lt;/span&gt;:&lt;span class="k"&gt;$(&lt;/span&gt;id -g&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  --volume /etc/passwd:/etc/passwd:ro &lt;span class="se"&gt;\&lt;/span&gt;
  --volume /etc/group:/etc/group:ro &lt;span class="se"&gt;\&lt;/span&gt;
  --read-only &lt;span class="se"&gt;\&lt;/span&gt;
  --volume &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;:/workspace &lt;span class="se"&gt;\&lt;/span&gt;
  --workdir /workspace &lt;span class="se"&gt;\&lt;/span&gt;
  pyenv
gerard@atlantis:~/projects/newproject$
&lt;/pre&gt;&lt;/div&gt;</content><category term="docker"></category><category term="herramientas"></category><category term="workspace"></category></entry><entry><title>Aplicaciones gráficas en un contenedor</title><link href="https://www.linuxsysadmin.ml/2018/01/aplicaciones-graficas-en-un-contenedor.html" rel="alternate"></link><published>2018-01-08T10:00:00+01:00</published><updated>2018-01-08T10:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2018-01-08:/2018/01/aplicaciones-graficas-en-un-contenedor.html</id><summary type="html">&lt;p&gt;A veces nos encontramos en un ordenador que no tenemos preparado para usar nuestras aplicaciones habituales, o simplemente no es el nuestro, o no queremos ensuciarlo para probar aplicaciones nuevas. Si disponemos de &lt;strong&gt;docker&lt;/strong&gt;, es posible ejecutarlas compartiendo solamente el &lt;em&gt;unix socket&lt;/em&gt; del servidor gráfico para verlas en nuestra pantalla …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A veces nos encontramos en un ordenador que no tenemos preparado para usar nuestras aplicaciones habituales, o simplemente no es el nuestro, o no queremos ensuciarlo para probar aplicaciones nuevas. Si disponemos de &lt;strong&gt;docker&lt;/strong&gt;, es posible ejecutarlas compartiendo solamente el &lt;em&gt;unix socket&lt;/em&gt; del servidor gráfico para verlas en nuestra pantalla.&lt;/p&gt;
&lt;p&gt;El fichero &lt;em&gt;Dockerfile&lt;/em&gt; no es distinto del que usaríamos para una aplicación sin entorno gráfico, bastando instalar el programa que queramos y confiando en que el sistema de dependencias del gestor de paquetes consiga lo que este necesite.&lt;/p&gt;
&lt;p&gt;En este caso pongo un editor de lenguaje de marcado &lt;em&gt;markdown&lt;/em&gt;, pero se podría poner un navegador, un juego o lo que queramos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/retext$ cat Dockerfile 
FROM debian:jessie
RUN apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    apt-get install -y retext &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    rm -rf /var/lib/apt/lists/*
RUN useradd gerard
USER gerard
CMD &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/bin/retext&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
gerard@sirius:~/docker/retext$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Construimos la imagen de la misma forma en la que lo hacemos habitualmente, con el mismo comando &lt;em&gt;docker build&lt;/em&gt; habitual:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/retext$ docker build -t retext .
Sending build context to Docker daemon &lt;span class="m"&gt;2&lt;/span&gt;.048 kB
Step &lt;span class="m"&gt;1&lt;/span&gt; : FROM debian:jessie
 ---&amp;gt; 19134a8202e7
Step &lt;span class="m"&gt;2&lt;/span&gt; : RUN apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;     apt-get install -y retext &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;     rm -rf /var/lib/apt/lists/*
 ---&amp;gt; Running in bb0cdc51af3e
...
 ---&amp;gt; 1150d6a6a3e2
Removing intermediate container bb0cdc51af3e
Step &lt;span class="m"&gt;3&lt;/span&gt; : RUN useradd gerard
 ---&amp;gt; Running in 97e1de7b50d3
 ---&amp;gt; 4d8f69d5f570
Removing intermediate container 97e1de7b50d3
Step &lt;span class="m"&gt;4&lt;/span&gt; : USER gerard
 ---&amp;gt; Running in 29bb618fc788
 ---&amp;gt; 1a7388f29cda
Removing intermediate container 29bb618fc788
Step &lt;span class="m"&gt;5&lt;/span&gt; : CMD /usr/bin/retext
 ---&amp;gt; Running in fefaa04ee25e
 ---&amp;gt; af856bcf0c49
Removing intermediate container fefaa04ee25e
Successfully built af856bcf0c49
gerard@sirius:~/docker/retext$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si intentamos ejecutar esta imagen, veremos que falla; el contenedor no tiene acceso a los dispositivos, ni al &lt;em&gt;unix socket&lt;/em&gt; en donde este se ejecuta. Tampoco tenemos definida la variable de sistema &lt;em&gt;DISPLAY&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/retext$ docker run --rm retext
QXcbConnection: Could not connect to display 
gerard@sirius:~/docker/retext$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por suerte podemos añadir ambos mediante &lt;em&gt;flags&lt;/em&gt; durante la ejecución del contenedor. Vamos a añadir el &lt;em&gt;unix socket&lt;/em&gt; del servidor gráfico mediante un volumen, y vamos a definir la variable &lt;em&gt;DISPLAY&lt;/em&gt; en función de la que tengamos en la máquina anfitrión.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/retext$ docker run --rm -e &lt;span class="s2"&gt;&amp;quot;DISPLAY=&lt;/span&gt;&lt;span class="nv"&gt;$DISPLAY&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -v /tmp/.X11-unix:/tmp/.X11-unix retext
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y ya podremos ver la aplicación corriendo como una ventana más en nuestra pantalla, sin problemas ni complicaciones.&lt;/p&gt;</content><category term="docker"></category><category term="escritorio"></category></entry><entry><title>Esta semana no hay artículo</title><link href="https://www.linuxsysadmin.ml/2017/10/esta-semana-no-hay-articulo.html" rel="alternate"></link><published>2017-10-09T16:30:00+02:00</published><updated>2017-10-09T16:30:00+02:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2017-10-09:/2017/10/esta-semana-no-hay-articulo.html</id><summary type="html">&lt;p&gt;Como algunos habreis podido comprobar, me he visto obligado a cambiar el dominio, de &lt;a href="http://www.linuxsysadmin.ml"&gt;www.linuxsysadmin.tk&lt;/a&gt; a &lt;a href="http://www.linuxsysadmin.ml"&gt;www.linuxsysadmin.ml&lt;/a&gt;. Este cambio viene motivado por la interrupción del dominio, que pude disfrutar de forma gratuita hasta la fecha de caducidad. Ahora me veo obligado a un cambio muy forzado …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como algunos habreis podido comprobar, me he visto obligado a cambiar el dominio, de &lt;a href="http://www.linuxsysadmin.ml"&gt;www.linuxsysadmin.tk&lt;/a&gt; a &lt;a href="http://www.linuxsysadmin.ml"&gt;www.linuxsysadmin.ml&lt;/a&gt;. Este cambio viene motivado por la interrupción del dominio, que pude disfrutar de forma gratuita hasta la fecha de caducidad. Ahora me veo obligado a un cambio muy forzado.&lt;/p&gt;
&lt;p&gt;El principio de este &lt;em&gt;blog&lt;/em&gt; era el de publicar artículos que sirvan como tutoriales a todo el que los pudiera necesitar, y para ello se ideó una solución sin coste basándose en un generador de contenido estático, alojamiento en github y un dominio gratuito.&lt;/p&gt;
&lt;p&gt;Este dominio gratuito ha expirado y ahora cuesta dinero, concretamente más de la miseria que entra en concepto publicidad. Así pues, la única opción viable ha sido usar otro dominio, por supuesto, gratuito tambien.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Un haiku sobre problemas de DNS" src="https://www.linuxsysadmin.ml/images/haiku_dns.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Aunque era un riesgo que ya conocía, esto supone básicamente la pérdida de dos cosas, ambas importantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;El estado de indexación y búsqueda en google&lt;/li&gt;
&lt;li&gt;Aquellos lectores fieles que me seguían habitualmente&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Estas actuaciones han provocado que no hay artículo durante la semana, y tener que esperar a la semana que viene. Así que os pido perdón por las molestias ocasionadas y espero que sigáis siendo fieles lectores. Por mi parte, espero no volver a dejar caducar el nuevo dominio.&lt;/p&gt;</content></entry><entry><title>Hospedando contenido estático en Github pages</title><link href="https://www.linuxsysadmin.ml/2017/03/hospedando-contenido-estatico-en-github-pages.html" rel="alternate"></link><published>2017-03-20T10:00:00+01:00</published><updated>2017-03-20T10:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2017-03-20:/2017/03/hospedando-contenido-estatico-en-github-pages.html</id><summary type="html">&lt;p&gt;Algunas veces nos hemos planteado la posibilidad de tener nuestro propio servidor con nuestras propias aplicaciones, pero el coste del &lt;em&gt;hosting&lt;/em&gt; nos lo ha hecho replantear, especialmente para proyectos de pruebas sin beneficio. Si no nos importa hospedar contenido &lt;strong&gt;HTML&lt;/strong&gt; estático, las páginas de &lt;strong&gt;GitHub&lt;/strong&gt; pueden cumplir con nuestras necesidades …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Algunas veces nos hemos planteado la posibilidad de tener nuestro propio servidor con nuestras propias aplicaciones, pero el coste del &lt;em&gt;hosting&lt;/em&gt; nos lo ha hecho replantear, especialmente para proyectos de pruebas sin beneficio. Si no nos importa hospedar contenido &lt;strong&gt;HTML&lt;/strong&gt; estático, las páginas de &lt;strong&gt;GitHub&lt;/strong&gt; pueden cumplir con nuestras necesidades.&lt;/p&gt;
&lt;p&gt;De hecho, este &lt;em&gt;blog&lt;/em&gt; está hospedado en &lt;em&gt;GitHub pages&lt;/em&gt; sin ningún coste de &lt;em&gt;hosting&lt;/em&gt;. Añadimos un nombre de registro gratuito, y obtenemos una plataforma sin coste de mantenimiento.&lt;/p&gt;
&lt;p&gt;La contrapartida es que este &lt;em&gt;blog&lt;/em&gt; está compuesto de páginas &lt;strong&gt;HTML&lt;/strong&gt; y no dispone de ninguna base de datos ni de ningún tipo de procesado en el servidor. Mantener este contenido sería una pesadilla, a no ser que se utilicen &lt;a href="https://www.linuxsysadmin.ml/2017/03/generadores-de-contenido-web-estaticos.html"&gt;generadores automáticos de HTML&lt;/a&gt;, que es lo que utilizo en este &lt;em&gt;blog&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Las páginas de &lt;em&gt;GitHub&lt;/em&gt; pueden ser de dos tipos: una por cada cuenta de usuario, y una por cada proyecto. De esta forma, como usuarios normales, deberíamos trabajar con las páginas de proyecto, puesto que solo disponemos de una página personal.&lt;/p&gt;
&lt;h2&gt;Páginas de proyecto&lt;/h2&gt;
&lt;p&gt;Cada repositorio puede disponer de un espacio web propio. Solo se necesita indicar a &lt;em&gt;GitHub&lt;/em&gt; qué rama tratar como &lt;em&gt;document root&lt;/em&gt;, para que pueda servirla adecuadamente. Vamos a ilustrar como se hace con un ejemplo:&lt;/p&gt;
&lt;p&gt;Vamos a empezar creando un nuevo repositorio en &lt;a href="https://github.com/new"&gt;https://github.com/new&lt;/a&gt;, de acuerdo a vuestras preferencias. En mi caso, me he dejado llevar por la sugerencia, puesto que este nombre no influye en nada; de esta forma nuestro repositorio se llama &lt;code&gt;didactic-meme&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Como no puede ser de otra forma, vamos a tener que clonar este repositorio para poder trabajar con él.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/projects$ git clone https://github.com/Sirtea/didactic-meme.git
Cloning into &lt;span class="s1"&gt;&amp;#39;didactic-meme&amp;#39;&lt;/span&gt;...
warning: You appear to have cloned an empty repository.
Checking connectivity... &lt;span class="k"&gt;done&lt;/span&gt;.
gerard@aldebaran:~/projects$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tras poner algún fichero en la rama &lt;code&gt;master&lt;/code&gt; y hacer un &lt;em&gt;commit&lt;/em&gt;, podemos crear una rama para alojar nuestro contenido &lt;strong&gt;HTML&lt;/strong&gt;. Esta rama se puede llamar &lt;code&gt;master&lt;/code&gt; (que viene por defecto) o &lt;code&gt;gh-pages&lt;/code&gt;. Esto es una decisión personal, pero como yo utilizo un generador de páginas &lt;strong&gt;HTML&lt;/strong&gt;, yo prefiero dejar la rama &lt;code&gt;master&lt;/code&gt; para el contenido escrito, y la rama &lt;code&gt;gh-pages&lt;/code&gt; para el contenido generado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/projects/didactic-meme$ git checkout -b gh-pages master
Switched to a new branch &lt;span class="s1"&gt;&amp;#39;gh-pages&amp;#39;&lt;/span&gt;
gerard@aldebaran:~/projects/didactic-meme$ git branch -v
* gh-pages 9b33086 Some master content
  master   9b33086 Some master content
gerard@aldebaran:~/projects/didactic-meme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A partir de aquí el flujo de trabajo es el que usaríamos normalmente con &lt;strong&gt;Git&lt;/strong&gt;. Creamos el contenido &lt;strong&gt;HTML&lt;/strong&gt;, lo copiamos a lo generamos; el resto es tan simple como hacer un &lt;em&gt;commit&lt;/em&gt; y subirlo a &lt;em&gt;GitHub&lt;/em&gt; con un &lt;em&gt;push&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/projects/didactic-meme$ cat index.html 
&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;
gerard@aldebaran:~/projects/didactic-meme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Un detalle del &lt;em&gt;push&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/projects/didactic-meme$ git push origin gh-pages
Username &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com&amp;#39;&lt;/span&gt;: sirtea
Password &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://sirtea@github.com&amp;#39;&lt;/span&gt;: 
Total &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, reused &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
To https://github.com/Sirtea/didactic-meme.git
 * &lt;span class="o"&gt;[&lt;/span&gt;new branch&lt;span class="o"&gt;]&lt;/span&gt;      gh-pages -&amp;gt; gh-pages
gerard@aldebaran:~/projects/didactic-meme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y como ya tenemos las dos ramas en &lt;em&gt;GitHub&lt;/em&gt;, podemos continuar con el &lt;em&gt;setup&lt;/em&gt; de nuestro sitio. Para ello vamos a la página de nuestro repositorio y cambiamos a la pestaña &lt;em&gt;Settings&lt;/em&gt;. En esta sección existe un desplegable para elegir la rama que queremos servir como página de proyecto. Seleccionamos &lt;code&gt;gh-pages&lt;/code&gt; y guardamos.&lt;/p&gt;
&lt;p&gt;Solo nos queda visitar la dirección que nos proporcionan en la misma página de &lt;em&gt;Settings&lt;/em&gt;, y ver que ya tenemos un espacio web.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~$ curl https://sirtea.github.io/didactic-meme/
&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;
gerard@aldebaran:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;TRUCO&lt;/strong&gt;: las páginas se sirven usando mecanismos de &lt;em&gt;caché&lt;/em&gt;, así que puede pasar algunos segundos hasta que el contenido se actualice o aparezca. Sed pacientes.&lt;/p&gt;
&lt;h2&gt;Sirviendo la página de proyecto con un dominio propio&lt;/h2&gt;
&lt;p&gt;La verdad es que la dirección que nos ha quedado no es bonita. La buena noticia es que puede ser mejor; podemos servir el contenido en un dominio propio, sin la coletilla del nombre del repositorio.&lt;/p&gt;
&lt;p&gt;El primer paso es conseguir un dominio al que tengamos acceso a los registros; vamos a tener que poner un registro &lt;em&gt;CNAME&lt;/em&gt; apuntando a &lt;em&gt;GitHub&lt;/em&gt;. Para evitar la lentitud del proceso, vamos a mostrar el caso de este &lt;em&gt;blog&lt;/em&gt;, ya configurado.&lt;/p&gt;
&lt;p&gt;Para que &lt;em&gt;GitHub&lt;/em&gt; sepa qué página de proyecto debe servir con cada dominio, nos sugieren que pongamos un fichero &lt;em&gt;CNAME&lt;/em&gt; en la raíz del espacio web. Este fichero solo puede contener un dominio, y debe coincidir con el del dominio elegido.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~$ curl http://www.linuxsysadmin.tk/CNAME
www.linuxsysadmin.tk
gerard@aldebaran:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora solo falta instruir a nuestro DNS para que resuelva las peticiones contra &lt;em&gt;GitHub&lt;/em&gt;. La forma recomendada es poner un registro &lt;em&gt;CNAME&lt;/em&gt; apuntando a &lt;code&gt;&amp;lt;usuario&amp;gt;.github.io&lt;/code&gt;, dejando a su criterio donde apunta este dominio, y despreocupándonos en el caso de que esta dirección IP final cambiara.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~$ dig www.linuxsysadmin.tk
...  
&lt;span class="p"&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class="p"&gt;;&lt;/span&gt;www.linuxsysadmin.tk.      IN  A

&lt;span class="p"&gt;;;&lt;/span&gt; ANSWER SECTION:
www.linuxsysadmin.tk.   &lt;span class="m"&gt;14018&lt;/span&gt;   IN  CNAME   sirtea.github.io.
sirtea.github.io.   &lt;span class="m"&gt;2394&lt;/span&gt;    IN  CNAME   github.map.fastly.net.
github.map.fastly.net.  &lt;span class="m"&gt;20&lt;/span&gt;  IN  A   &lt;span class="m"&gt;151&lt;/span&gt;.101.120.133
...  
gerard@aldebaran:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cada vez que pidamos nuestro dominio, &lt;em&gt;GitHub&lt;/em&gt; se va a encargar a servir la página de proyecto que corresponde a ese dominio, cosa que sabe porque el fichero &lt;em&gt;CNAME&lt;/em&gt; se lo indica. con esto nos queda una dirección mas bonita en el navegador web.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~$ curl -s http://www.linuxsysadmin.tk/ &lt;span class="p"&gt;|&lt;/span&gt; head
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;es&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;og: http://ogp.me/ns# fb: https://www.facebook.com/2008/fbml&amp;quot;&lt;/span&gt;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Linux Sysadmin&amp;lt;/title&amp;gt;
    &amp;lt;!-- Using the latest rendering mode &lt;span class="k"&gt;for&lt;/span&gt; IE --&amp;gt;
    &amp;lt;meta http-equiv&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X-UA-Compatible&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;IE=edge&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;meta &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&lt;/span&gt;&amp;gt;


gerard@aldebaran:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;De hecho, si solicitamos la dirección anterior, &lt;em&gt;GitHub&lt;/em&gt; nos devuelve una redirección al nuevo dominio, ya que asume que es la dirección "oficial".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~$ curl -i http://sirtea.github.io/www.linuxsysadmin.tk/
HTTP/1.1 &lt;span class="m"&gt;301&lt;/span&gt; Moved Permanently
...  
Location: http://www.linuxsysadmin.tk/
...  

&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;301 Moved Permanently&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body &lt;span class="nv"&gt;bgcolor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;white&amp;quot;&lt;/span&gt;&amp;gt;
&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;301 Moved Permanently&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx&amp;lt;/center&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
gerard@aldebaran:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Páginas personales&lt;/h2&gt;
&lt;p&gt;Las páginas personales son las que se encargan de servir las direcciones tipo &lt;code&gt;&amp;lt;http|https&amp;gt;://&amp;lt;usuario&amp;gt;.github.io/&lt;/code&gt;, sin la coletilla del proyecto.&lt;/p&gt;
&lt;p&gt;El funcionamiento es el mismo, con dos excepciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;El repositorio debe llamarse igual que el dominio (&lt;code&gt;&amp;lt;usuario&amp;gt;.github.io&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;La rama que se sirve SIEMPRE es la rama &lt;code&gt;master&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Entonces solo hace falta cargar esa rama de contenido &lt;strong&gt;HTML&lt;/strong&gt;. De hecho, el truco del &lt;em&gt;CNAME&lt;/em&gt; también funciona.&lt;/p&gt;</content><category term="git"></category><category term="github"></category><category term="github pages"></category><category term="html"></category></entry><entry><title>Generadores de contenido web estáticos</title><link href="https://www.linuxsysadmin.ml/2017/03/generadores-de-contenido-web-estaticos.html" rel="alternate"></link><published>2017-03-13T10:00:00+01:00</published><updated>2017-03-13T10:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2017-03-13:/2017/03/generadores-de-contenido-web-estaticos.html</id><summary type="html">&lt;p&gt;Antes de la masiva invasión de &lt;strong&gt;PHP&lt;/strong&gt; y &lt;strong&gt;mysql&lt;/strong&gt; en todos los proveedores de internet, existían solamente las páginas &lt;strong&gt;HTML&lt;/strong&gt; estáticas. Los servidores eran más simples y tenían menos superficie de ataque, aunque mantener las páginas web era un auténtica pesadilla; para eso se han creado los generadores web estáticos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Antes de la masiva invasión de &lt;strong&gt;PHP&lt;/strong&gt; y &lt;strong&gt;mysql&lt;/strong&gt; en todos los proveedores de internet, existían solamente las páginas &lt;strong&gt;HTML&lt;/strong&gt; estáticas. Los servidores eran más simples y tenían menos superficie de ataque, aunque mantener las páginas web era un auténtica pesadilla; para eso se han creado los generadores web estáticos.&lt;/p&gt;
&lt;p&gt;Cuando solicitamos una página web a un servidor dinámico, existe un código fuente que se suele encargar de conseguir los datos de una base de datos y mezclarlos con un tema para generar la página, todo en tiempo de &lt;em&gt;runtime&lt;/em&gt;. Este modelo es relativamente lento y exige la existencia de una base de datos y de un procesado en el servidor, aunque suele ofrecer una bonita interfaz para añadir contenido &lt;em&gt;online&lt;/em&gt; desde casi cualquier sitio.&lt;/p&gt;
&lt;p&gt;Este modelo es muy adecuado para páginas y &lt;strong&gt;APIs&lt;/strong&gt; con un contenido rápidamente cambiante, pero para una página tipo &lt;em&gt;blog&lt;/em&gt; es poco eficiente. Si tenemos en cuenta que un &lt;em&gt;blog&lt;/em&gt; se actualiza relativamente poco, pero se lee teóricamente mucho, entonces necesitamos reducir el tiempo de &lt;em&gt;renderizado&lt;/em&gt; de la página, incluso suprimiéndolo.&lt;/p&gt;
&lt;p&gt;Sin embargo, a alguien se le ocurrió una idea nueva: ¿que pasaría si cuando un editor cambia su contenido, generara &lt;strong&gt;TODAS&lt;/strong&gt; las páginas posibles y el servidor se limitara a servir esos ficheros previamente generados?&lt;/p&gt;
&lt;p&gt;En este caso, solamente necesitaríamos un servidor web normal, como por ejemplo &lt;em&gt;Apache&lt;/em&gt; o &lt;em&gt;Nginx&lt;/em&gt;, e incluso se podría alojar gratuitamente en servicios que sirvan páginas &lt;strong&gt;HTML&lt;/strong&gt; estáticas, como por ejemplo, en &lt;em&gt;GitHub&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: La combinación de &lt;em&gt;GitHub Pages&lt;/em&gt; con el generador estático &lt;em&gt;Pelican&lt;/em&gt; es lo que utiliza este &lt;em&gt;blog&lt;/em&gt; para llegar al público general.&lt;/p&gt;
&lt;p&gt;La clave de éxito para simplificar el mantenimiento de cualquier página web consiste en separar el contenido de la presentación, de forma que un editor no necesita conocer &lt;strong&gt;HTML&lt;/strong&gt; para crear su web, mientras que un diseñador se puede limitar a crear temas. También es interesante usar un formato de ficheros para no depender de una base de datos.&lt;/p&gt;
&lt;p&gt;Con esto en mente, la mayoría de los generadores estáticos son mas o menos iguales: se trata de un &lt;em&gt;software&lt;/em&gt; que se dedica a generar todas las páginas web a partir de un contenido (normalmente en ficheros) y de unas plantillas (el tema). Como la lista es gigantesca, vamos a dejar a otros que la mantengan, pero ejemplo en &lt;a href="https://www.staticgen.com/"&gt;StaticGen - Top Open-Source Static Site Generators&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Un caso práctico con Hugo&lt;/h2&gt;
&lt;p&gt;Ojeando el &lt;em&gt;ranking&lt;/em&gt;, vemos que la lista es muy larga y elegir una de estas soluciones no es fácil. Vamos a ser prácticos: no quiero instalar &lt;strong&gt;ruby&lt;/strong&gt; en mi máquina, así que usaremos el siguiente, que es un binario solitario y no ensucia mi entorno de trabajo; además presume de ser rápido. Así pues, el candidato es &lt;a href="http://gohugo.io/"&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Otros enlaces de interés para seguir este artículo se localizan en la documentación, concretamente en &lt;a href="http://gohugo.io/overview/installing/"&gt;Installing&lt;/a&gt; y en &lt;a href="http://gohugo.io/overview/installing/"&gt;Quickstart&lt;/a&gt;. Encontraréis una buena documentación de cada aspecto del funcionamiento en la barra lateral de cualquier página de documentación.&lt;/p&gt;
&lt;h3&gt;Instalación&lt;/h3&gt;
&lt;p&gt;En mi caso, la &lt;em&gt;release&lt;/em&gt; que necesito es &lt;a href="https://github.com/spf13/hugo/releases/download/v0.18.1/hugo_0.18.1_Linux-64bit.tar.gz"&gt;https://github.com/spf13/hugo/releases/download/v0.18.1/hugo_0.18.1_Linux-64bit.tar.gz&lt;/a&gt;. Así que la descargo. El fichero comprimido lleva el binario y otros ficheros de documentación.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~$ tar tf hugo_0.18.1_Linux-64bit.tar.gz 
hugo_0.18.1_linux_amd64/hugo_0.18.1_linux_amd64
hugo_0.18.1_linux_amd64/README.md
hugo_0.18.1_linux_amd64/LICENSE.md
gerard@aldebaran:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lo descomprimimos y lo ponemos en algún lugar del &lt;em&gt;path&lt;/em&gt; por comodidad, asegurando que tiene permisos de ejecución y que lo ejecutamos sin problemas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~$ tar xf hugo_0.18.1_Linux-64bit.tar.gz 
gerard@aldebaran:~$ cp hugo_0.18.1_linux_amd64/hugo_0.18.1_linux_amd64 ~/bin/hugo
gerard@aldebaran:~$ chmod a+x bin/hugo 
gerard@aldebaran:~$ hugo version
Hugo Static Site Generator v0.18.1 BuildDate: &lt;span class="m"&gt;2017&lt;/span&gt;-02-14T13:43:15+01:00
gerard@aldebaran:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creación de una nueva web&lt;/h3&gt;
&lt;p&gt;Nuestra nueva web necesita una estructura de carpetas muy concreta que podemos crear con un simple comando, indicando la carpeta contenedora.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace$ hugo new site site1
Congratulations! Your new Hugo site is created in /home/gerard/workspace/site1.

Just a few more steps and you&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;re ready to go:

&lt;span class="m"&gt;1&lt;/span&gt;. Download a theme into the same-named folder.
   Choose a theme from https://themes.gohugo.io/, or
   create your own with the &lt;span class="s2"&gt;&amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot;&lt;/span&gt; command.
&lt;span class="m"&gt;2&lt;/span&gt;. Perhaps you want to add some content. You can add single files
   with &lt;span class="s2"&gt;&amp;quot;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;quot;&lt;/span&gt;.
&lt;span class="m"&gt;3&lt;/span&gt;. Start the built-in live server via &lt;span class="s2"&gt;&amp;quot;hugo server&amp;quot;&lt;/span&gt;.

Visit https://gohugo.io/ &lt;span class="k"&gt;for&lt;/span&gt; quickstart guide and full documentation.
gerard@aldebaran:~/workspace$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O de forma similar, para usar la carpeta actual:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace$ mkdir site2
gerard@aldebaran:~/workspace$ &lt;span class="nb"&gt;cd&lt;/span&gt; site2
gerard@aldebaran:~/workspace/site2$ hugo new site .
Congratulations! Your new Hugo site is created in /home/gerard/workspace/site2.

Just a few more steps and you&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;re ready to go:

&lt;span class="m"&gt;1&lt;/span&gt;. Download a theme into the same-named folder.
   Choose a theme from https://themes.gohugo.io/, or
   create your own with the &lt;span class="s2"&gt;&amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot;&lt;/span&gt; command.
&lt;span class="m"&gt;2&lt;/span&gt;. Perhaps you want to add some content. You can add single files
   with &lt;span class="s2"&gt;&amp;quot;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;quot;&lt;/span&gt;.
&lt;span class="m"&gt;3&lt;/span&gt;. Start the built-in live server via &lt;span class="s2"&gt;&amp;quot;hugo server&amp;quot;&lt;/span&gt;.

Visit https://gohugo.io/ &lt;span class="k"&gt;for&lt;/span&gt; quickstart guide and full documentation.
gerard@aldebaran:~/workspace/site2$ &lt;span class="nb"&gt;cd&lt;/span&gt; ..
gerard@aldebaran:~/workspace$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Así nos queda el esqueleto de nuestra carpeta contenedora:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/site1$ tree -F
.
├── archetypes/
├── content/
├── data/
├── layouts/
├── static/
├── themes/
└── config.toml

&lt;span class="m"&gt;6&lt;/span&gt; directories, &lt;span class="m"&gt;1&lt;/span&gt; file
gerard@aldebaran:~/workspace/site1$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora necesitamos un tema para &lt;em&gt;renderizar&lt;/em&gt; nuestra web. Podemos crear un tema propio siguiendo la documentación, si así lo deseamos; para no extendernos, voy a utilizar uno que ya existe y que podemos encontrar en el sitio de &lt;a href="http://themes.gohugo.io/"&gt;temas de Hugo&lt;/a&gt;. Por defecto no viene ningún tema, así que las páginas saldrían en blanco.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/site1$ &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; themes&lt;span class="p"&gt;;&lt;/span&gt; git clone https://github.com/comfusion/after-dark&lt;span class="o"&gt;)&lt;/span&gt;
Cloning into &lt;span class="s1"&gt;&amp;#39;after-dark&amp;#39;&lt;/span&gt;...
remote: Counting objects: &lt;span class="m"&gt;542&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Total &lt;span class="m"&gt;542&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, reused &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, pack-reused &lt;span class="m"&gt;542&lt;/span&gt;
Receiving objects: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;542&lt;/span&gt;/542&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;6&lt;/span&gt;.26 MiB &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;941&lt;/span&gt;.00 KiB/s, &lt;span class="k"&gt;done&lt;/span&gt;.
Resolving deltas: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;296&lt;/span&gt;/296&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
Checking connectivity... &lt;span class="k"&gt;done&lt;/span&gt;.
gerard@aldebaran:~/workspace/site1$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si miramos en la carpeta &lt;code&gt;themes/&lt;/code&gt;, veremos que ha aparecido una nueva carpeta con el tema deseado; el nombre de la carpeta es el parámetro que vamos a usar para indicar que tema usaremos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/site1$ ls themes/
after-dark
gerard@aldebaran:~/workspace/site1$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Es un buen momento para modificar la configuración del sitio, siendo especialmente importante indicar el tema a usar. Si no lo hacemos, tendremos que indicarlo como parámetro cada vez que invoquemos el resto de comandos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/site1$ cat config.toml 
&lt;span class="nv"&gt;languageCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;en-us&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;My New Hugo Site&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://example.org/&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;after-dark&amp;quot;&lt;/span&gt;
gerard@aldebaran:~/workspace/site1$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;TRUCO&lt;/strong&gt;: Para cambiar el tema de nuestra web, solo hace falta poner un tema nuevo en la carpeta &lt;code&gt;themes/&lt;/code&gt; y configurar el fichero con el nuevo tema. Esto nos permite probar temas diferentes; de hecho, todas las páginas van a ser reconstruidas con el nuevo tema. Si solo queremos ver que tal queda un tema, no hace falta modificar el fichero de configuración; con ejecutar &lt;code&gt;hugo&lt;/code&gt; con el &lt;em&gt;flag&lt;/em&gt; &lt;code&gt;--theme &amp;lt;tema&amp;gt;&lt;/code&gt; nos bastaría.&lt;/p&gt;
&lt;h3&gt;Generando contenido&lt;/h3&gt;
&lt;p&gt;La mecánica básica de trabajo es muy simple: creamos un nuevo contenido, levantamos el servidor de desarrollo y nos limitamos a ir viendo como cambia la página tal como vamos modificando y guardando el contenido.&lt;/p&gt;
&lt;p&gt;El servidor de desarrollo es una herramienta muy útil, y no hay ningún motivo por el que no esté permanentemente corriendo mientras trabajamos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Levanta un servidor web local que sirve las páginas desde memoria&lt;/li&gt;
&lt;li&gt;Reconstruye el contenido en memoria cada vez que un fichero cambia&lt;/li&gt;
&lt;li&gt;Sustituye todas las ocurrencias del parámetro &lt;code&gt;baseurl&lt;/code&gt; por &lt;code&gt;localhost&lt;/code&gt;, para su funcionamiento local&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esto significa que se generará ningún fichero en disco. Para eso hay otros comandos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/site1$ hugo server
Started building sites ...
Built site &lt;span class="k"&gt;for&lt;/span&gt; language en:
&lt;span class="m"&gt;0&lt;/span&gt; draft content
&lt;span class="m"&gt;0&lt;/span&gt; future content
&lt;span class="m"&gt;0&lt;/span&gt; expired content
&lt;span class="m"&gt;0&lt;/span&gt; regular pages created
&lt;span class="m"&gt;1&lt;/span&gt; other pages created
&lt;span class="m"&gt;0&lt;/span&gt; non-page files copied
&lt;span class="m"&gt;0&lt;/span&gt; paginator pages created
&lt;span class="m"&gt;0&lt;/span&gt; tags created
&lt;span class="m"&gt;0&lt;/span&gt; categories created
total in &lt;span class="m"&gt;14&lt;/span&gt; ms
Watching &lt;span class="k"&gt;for&lt;/span&gt; changes in /home/gerard/workspace/site1/&lt;span class="o"&gt;{&lt;/span&gt;data,content,layouts,static,themes&lt;span class="o"&gt;}&lt;/span&gt;
Serving pages from memory
Web Server is available at http://localhost:1313/ &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; address &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="o"&gt;)&lt;/span&gt;
Press Ctrl+C to stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora creamos una nueva página, por ejemplo un &lt;em&gt;post&lt;/em&gt; nuevo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/site1$ hugo new post/lorem-ipsum.md
/home/gerard/workspace/site1/content/post/lorem-ipsum.md created
gerard@aldebaran:~/workspace/site1$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y lo editamos a placer. Me voy a limitar a usar un generador de texto &lt;em&gt;markdown&lt;/em&gt;, que se encuentra &lt;a href="https://jaspervdj.be/lorem-markdownum/"&gt;aquí&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;+++
&lt;span class="nv"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;no description&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2017-02-14T15:51:57+01:00&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Gratia retia iamque&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lorem&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;ipsum&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;categories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uncathegorized&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;draft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;
+++



&lt;span class="c1"&gt;## Mihi arguit hastam securaque face vigilans obruta&lt;/span&gt;

Lorem markdownum amoris illis, spicea, daedalus intonsum procul certo dubioque, inmitibus. Verti frondescere et natura Hymettia carmine *candidus Agenorides* perdere.

    swappableEbookHard.metaSkinNybble&lt;span class="o"&gt;(&lt;/span&gt;simmApple&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;desktopWebMouse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; page&lt;span class="o"&gt;(&lt;/span&gt;analog_rt_regular, eSession, menu_oem&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    var &lt;span class="nv"&gt;prompt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; dns_megabit&lt;span class="o"&gt;(&lt;/span&gt;softShell&lt;span class="o"&gt;(&lt;/span&gt;duplexMediaYoutube, netiquette, fontBrouterPng&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;## Imagine sub nomine occursu&lt;/span&gt;

Parvas pater. Ter modo quassaque collo. Aequora chori nec tumulum *gemitus quibus*.

Odiumque duo, aera prolem mox silvas poteratque sagittis quoque crine fert. Longo ferarum temptaminis stagna vultum et urbe Peripha, Aeginam. Ne O acuto tam Thetis solita cognati robora sit tellure, et Alcyone moenia vitiorum. Solis iam omnes Lucina non suis *utroque novis* sagittam suo carchesia Achivi repleri ingratus quem.

&lt;span class="c1"&gt;## Iactasque caelatus me foret aequi&lt;/span&gt;

Has serta relictis, non Lucina, Phylius falsa adflata sudore. &lt;span class="o"&gt;[&lt;/span&gt;Fago inserit palpitat&lt;span class="o"&gt;](&lt;/span&gt;http://romamtot.io/hos&lt;span class="o"&gt;)&lt;/span&gt; rubentia adspicit et dolore *refert ita*, et. Quod suppressis novat sororis ubique astu&lt;span class="p"&gt;;&lt;/span&gt; pedibus spectabat dixere loquax comitem, nobis effugit&lt;span class="p"&gt;;&lt;/span&gt; tibi cibo nunc oppugnant.

Inania agat cum vidi cruribus et lanas nepotem Tethyn, umbris Agenorides stamina omnes sed fecit absumitur acclinia. Morati femina deam thyrsos vultus aequales suo deum faciem draconis diurnis liquor contentus.

Sine in robora aureus ignavis bella vaga super multa saepe atque tot **sceleratior sunt**, est furiale. Felix flammas quiete&lt;span class="p"&gt;;&lt;/span&gt; omnis vidi quoque sagittas cruentum prosunt tot vultus iamque! Auget comis me precibus vetus, hausit diversa an tulimus laniem amores *retro aequalique*. Molli arbore, altera nota&lt;span class="p"&gt;;&lt;/span&gt; furore posuisset in post Midan pollice et multos poteras.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vemos que el servidor de desarrollo ha detectado el cambio y ha regenerado el contenido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/site1$ hugo server
...
Change detected, rebuilding site
&lt;span class="m"&gt;2017&lt;/span&gt;-02-14 &lt;span class="m"&gt;15&lt;/span&gt;:56 +0100
Source changed /home/gerard/workspace/site1/content/post/lorem-ipsum.md
Built site &lt;span class="k"&gt;for&lt;/span&gt; language en:
&lt;span class="m"&gt;0&lt;/span&gt; draft content
&lt;span class="m"&gt;0&lt;/span&gt; future content
&lt;span class="m"&gt;0&lt;/span&gt; expired content
&lt;span class="m"&gt;1&lt;/span&gt; regular pages created
&lt;span class="m"&gt;7&lt;/span&gt; other pages created
&lt;span class="m"&gt;1&lt;/span&gt; non-page files copied
&lt;span class="m"&gt;5&lt;/span&gt; paginator pages created
&lt;span class="m"&gt;2&lt;/span&gt; tags created
&lt;span class="m"&gt;1&lt;/span&gt; categories created
total in &lt;span class="m"&gt;8&lt;/span&gt; ms
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y si apuntamos nuestro navegador a la URL sugerida &lt;a href="http://localhost:1313/"&gt;http://localhost:1313/&lt;/a&gt; podremos ver nuestro sitio web con las modificaciones pertinentes.&lt;/p&gt;
&lt;p&gt;A lo largo de la vida de la página, vamos a repetir este paso muchas veces, tal como queramos ir añadiendo más páginas.&lt;/p&gt;
&lt;h3&gt;Listos para publicar&lt;/h3&gt;
&lt;p&gt;Finalmente estamos contentos con el contenido y decidimos que está listo para ser generado como ficheros &lt;strong&gt;HTML&lt;/strong&gt; para su publicación. Esto se consigue con el uso del comando &lt;code&gt;hugo&lt;/code&gt; sin mas parámetros.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/site1$ hugo
Started building sites ...
Built site &lt;span class="k"&gt;for&lt;/span&gt; language en:
&lt;span class="m"&gt;0&lt;/span&gt; draft content
&lt;span class="m"&gt;0&lt;/span&gt; future content
&lt;span class="m"&gt;0&lt;/span&gt; expired content
&lt;span class="m"&gt;1&lt;/span&gt; regular pages created
&lt;span class="m"&gt;7&lt;/span&gt; other pages created
&lt;span class="m"&gt;0&lt;/span&gt; non-page files copied
&lt;span class="m"&gt;5&lt;/span&gt; paginator pages created
&lt;span class="m"&gt;2&lt;/span&gt; tags created
&lt;span class="m"&gt;1&lt;/span&gt; categories created
total in &lt;span class="m"&gt;27&lt;/span&gt; ms
gerard@aldebaran:~/workspace/site1$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y esto nos deja los ficheros en la carpeta &lt;code&gt;public/&lt;/code&gt; para que los publiquemos según nuestro método de despliegue favorito, sea &lt;strong&gt;FTP&lt;/strong&gt;, &lt;strong&gt;rsync&lt;/strong&gt;, o cualquier otro método. Encuentro especialmente interesante el &lt;a href="https://gohugo.io/tutorials/github-pages-blog/"&gt;uso de GitHub&lt;/a&gt; para alojar la web.&lt;/p&gt;</content><category term="html"></category><category term="generador estático"></category><category term="hugo"></category></entry><entry><title>Sincronizando ficheros con ownCloud</title><link href="https://www.linuxsysadmin.ml/2017/02/sincronizando-ficheros-con-owncloud.html" rel="alternate"></link><published>2017-02-20T10:00:00+01:00</published><updated>2017-02-20T10:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2017-02-20:/2017/02/sincronizando-ficheros-con-owncloud.html</id><summary type="html">&lt;p&gt;Finalmente ha sucedido: el ingeniero de seguridad de la empresa ha decidido cerrar servicios de sincronizado de ficheros, dejando inútiles servicios como &lt;strong&gt;Dropbox&lt;/strong&gt;, &lt;strong&gt;Mega&lt;/strong&gt; y otros. Sin embargo, cualquier bloqueo que se haga mediante el dominio hace que sea imposible cerrar todos estos servicios, e incluso podemos poner el nuestro …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Finalmente ha sucedido: el ingeniero de seguridad de la empresa ha decidido cerrar servicios de sincronizado de ficheros, dejando inútiles servicios como &lt;strong&gt;Dropbox&lt;/strong&gt;, &lt;strong&gt;Mega&lt;/strong&gt; y otros. Sin embargo, cualquier bloqueo que se haga mediante el dominio hace que sea imposible cerrar todos estos servicios, e incluso podemos poner el nuestro.&lt;/p&gt;
&lt;p&gt;La forma mas simple de tener un servicio privado es utilizar algo que ya esté hecho, y en esta categoría tenemos un contendiente ganador: &lt;a href="https://owncloud.org/"&gt;ownCloud&lt;/a&gt;. Solo sería necesario alojarlo en algún lugar desde donde todos nuestros dispositivos tengan acceso.&lt;/p&gt;
&lt;p&gt;Vamos a tirar de &lt;strong&gt;Docker&lt;/strong&gt; y de &lt;strong&gt;DockerHub&lt;/strong&gt;, concretamente de la imagen oficial, que podemos encontrar &lt;a href="https://hub.docker.com/_/owncloud/"&gt;aquí&lt;/a&gt;. Como necesitamos una base de datos, vamos a utilizar &lt;strong&gt;docker-compose&lt;/strong&gt; para levantar fácilmente ambas, usando también la imagen oficial de &lt;strong&gt;MariaDB&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Así nos queda el &lt;em&gt;docker-compose.yml&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/owncloud$ cat docker-compose.yml 
version: &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;

services:
  owncloud:
    image: owncloud
    container_name: owncloud
    hostname: owncloud
    ports:
      - &lt;span class="s2"&gt;&amp;quot;80:80&amp;quot;&lt;/span&gt;
  mysql:
    image: mariadb
    container_name: mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root1234
gerard@sirius:~/docker/owncloud$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Levantamos el servicio con los comandos habituales:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/owncloud$ docker-compose up -d
Creating network &lt;span class="s2"&gt;&amp;quot;owncloud_default&amp;quot;&lt;/span&gt; with the default driver
Creating owncloud
Creating mysql
gerard@sirius:~/docker/owncloud$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y solamente nos queda acceder al puerto expuesto, desde un navegador cualquiera, usando la URL que corresponda. En mi caso, accedo desde la máquina local, que es donde he levantado ambos contenedores; simplemente usamos &lt;a href="http://localhost/"&gt;http://localhost/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Owncloud setup" src="https://www.linuxsysadmin.ml/images/owncloud_setup.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Vemos que la primera vez que accedemos nos pide configurar algunas cosas. Rellenamos los campos con los valores mas apropiados, con un usuario de administrador y su contraseña, y los datos de conexión de la base de datos, con cuidado de elegir &lt;strong&gt;mysql&lt;/strong&gt;. Usad los valores del &lt;em&gt;docker-compose.yml&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Database user&lt;/strong&gt;: root&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database password&lt;/strong&gt;: root1234&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database name&lt;/strong&gt;: owncloud (cualquiera valdría)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database host&lt;/strong&gt;: mysql (el &lt;em&gt;container_name&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si le damos a "Finalizar", no hay mas pasos a seguir; finalmente ya lo tenemos funcional.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Owncloud setup" src="https://www.linuxsysadmin.ml/images/owncloud_panel.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Ahora podemos descargarnos cualquier cliente para sincronizar nuestros datos desde cualquier dispositivo, sea para escritorio, &lt;em&gt;android&lt;/em&gt; o &lt;em&gt;iphone&lt;/em&gt;. Solamente necesitamos la precaución de crear usuarios para garantizar la privacidad entre todos ellos.&lt;/p&gt;</content><category term="owncloud"></category><category term="docker"></category><category term="docker-compose"></category></entry><entry><title>Un editor Markdown en javascript</title><link href="https://www.linuxsysadmin.ml/2017/01/un-editor-markdown-en-javascript.html" rel="alternate"></link><published>2017-01-02T12:00:00+01:00</published><updated>2017-01-02T12:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2017-01-02:/2017/01/un-editor-markdown-en-javascript.html</id><summary type="html">&lt;p&gt;Cuando utilizas el lenguaje &lt;strong&gt;markdown&lt;/strong&gt; de forma casi diaria, es muy probable que tengas editores dedicados para tal tarea. Sin embargo, es muy probable que la idea a escribir nos venga mientras estamos utilizando un ordenador distinto del habitual, en el que es posible que no tengamos nuestro editor favorito …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cuando utilizas el lenguaje &lt;strong&gt;markdown&lt;/strong&gt; de forma casi diaria, es muy probable que tengas editores dedicados para tal tarea. Sin embargo, es muy probable que la idea a escribir nos venga mientras estamos utilizando un ordenador distinto del habitual, en el que es posible que no tengamos nuestro editor favorito.&lt;/p&gt;
&lt;p&gt;Aunque la sintaxis de &lt;strong&gt;markdown&lt;/strong&gt; es tan simple que no se necesita un editor particular, podemos salir del paso con un editor web, de los que existen cientos. Luego podemos transferirnos el resultado usando un servicio en la nube o directamente enviándolo por &lt;em&gt;email&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Si queremos crear un formulario para integrar en una aplicación web, podemos utilizar un complemento &lt;em&gt;javascript&lt;/em&gt; que nos va a convertir un &lt;em&gt;textarea&lt;/em&gt; de HTML en un editor magnífico. Este editor se llama &lt;a href="https://simplemde.com/"&gt;SimpleMDE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La misma página web oficial incluye una demostración que nos da una idea de como se vería nuestro editor. Para simplificar este ejemplo, pongo un código HTML mínimo con el esqueleto de la página, con algunos complementos auxiliares activados, así como de la &lt;em&gt;feature&lt;/em&gt; de iluminación de sintaxis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;utf-8&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Markdown editor&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/highlight.js/latest/highlight.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width: 80%; margin: auto;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Markdown editor&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;simplemde&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SimpleMDE&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="nx"&gt;renderingConfig&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;codeSyntaxHighlighting&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="nx"&gt;showIcons&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;code&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por supuesto, los archivos &lt;em&gt;.css&lt;/em&gt; y los &lt;em&gt;.js&lt;/em&gt; se pueden servir localmente, previa descarga, si la situación lo hiciera necesario o recomendable.&lt;/p&gt;
&lt;p&gt;Os pongo una imagen para ver como queda; posiblemente acabe integrado en un proyecto futuro.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Editor SimpleMDE" src="https://www.linuxsysadmin.ml/images/editor_simpleMDE.jpg"&gt;&lt;/p&gt;</content><category term="editor"></category><category term="markdown"></category><category term="javascript"></category></entry><entry><title>Varios blogs de Ghost en el mismo servidor con Docker y Nginx</title><link href="https://www.linuxsysadmin.ml/2016/12/varios-blogs-de-ghost-en-el-mismo-servidor-con-docker-y-nginx.html" rel="alternate"></link><published>2016-12-26T10:00:00+01:00</published><updated>2016-12-26T10:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2016-12-26:/2016/12/varios-blogs-de-ghost-en-el-mismo-servidor-con-docker-y-nginx.html</id><summary type="html">&lt;p&gt;Como ya vimos en &lt;a href="https://www.linuxsysadmin.ml/2016/11/ghost-un-motor-para-hacer-blogs.html"&gt;un artículo anterior&lt;/a&gt; cada instancia de &lt;strong&gt;Ghost&lt;/strong&gt; necesita una combinación de dirección y puerto distinta. Esto supone un problema porque la pesadez de indicar el puerto en el navegador. Podemos poner un único servidor &lt;strong&gt;Nginx&lt;/strong&gt; que redirija las peticiones de forma transparente según el dominio pedido …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como ya vimos en &lt;a href="https://www.linuxsysadmin.ml/2016/11/ghost-un-motor-para-hacer-blogs.html"&gt;un artículo anterior&lt;/a&gt; cada instancia de &lt;strong&gt;Ghost&lt;/strong&gt; necesita una combinación de dirección y puerto distinta. Esto supone un problema porque la pesadez de indicar el puerto en el navegador. Podemos poner un único servidor &lt;strong&gt;Nginx&lt;/strong&gt; que redirija las peticiones de forma transparente según el dominio pedido.&lt;/p&gt;
&lt;p&gt;Ya vimos la facilidad de levantar un contenedor con un &lt;em&gt;blog&lt;/em&gt; de &lt;strong&gt;Ghost&lt;/strong&gt;. De hecho, podemos levantar tantos como queramos, porque &lt;strong&gt;Docker&lt;/strong&gt; provee a cada uno de su propia dirección IP. Sin embargo, la red de contenedores &lt;strong&gt;Docker&lt;/strong&gt; es privada y no es visible para el resto del mundo.&lt;/p&gt;
&lt;p&gt;Podemos solventar este problema exponiendo los puertos en la máquina huésped. Sin embargo, el hecho de que cada usuario tenga que indicar el puerto en la URL no es bonito. Así pues, vamos a esconder todos los contenedores sin exponer sus puertos. La única parte expuesta va a ser un contenedor &lt;strong&gt;Nginx&lt;/strong&gt; representante de todo el sistema (esto es lo que se llama un &lt;em&gt;proxy&lt;/em&gt; reverso), en el puerto 80. Este servicio va a recibir todas las peticiones a nuestro servidor, y las va a dirigir al contenedor que le corresponda de acuerdo con el dominio pedido.&lt;/p&gt;
&lt;p&gt;Vamos a simplificarnos el proceso usando &lt;strong&gt;docker-compose&lt;/strong&gt; para declarar el entorno y levantarlo de un solo comando. Es especialmente importante que las imágenes no se repitan, porque implicaría reconstruirlas cada vez. En vez de eso, vamos a abusar de las configuraciones vía variables de entorno.&lt;/p&gt;
&lt;p&gt;Así nos quedaría la carpeta de proyecto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/multighost$ tree
.
├── ghost_blog
│   ├── config.js
│   └── Dockerfile
├── proxy
│   ├── Dockerfile
│   ├── entrypoint.sh
│   ├── generate_configs.sh
│   └── nginx.conf
└── docker-compose.yml

&lt;span class="m"&gt;2&lt;/span&gt; directories, &lt;span class="m"&gt;7&lt;/span&gt; files
gerard@sirius:~/docker/multighost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;La imagen de ghost&lt;/h2&gt;
&lt;p&gt;Vamos a hacer una imagen para el entono de producción y vamos a dejar que use su propia base de datos &lt;strong&gt;sqlite&lt;/strong&gt;. Como ya vimos, la configuración por defecto de la imagen para el entorno &lt;em&gt;production&lt;/em&gt; está mal. Incluso aunque estuviera bien, hay parámetros que querremos cambiar, por ejemplo, la URL de nuestra web.&lt;/p&gt;
&lt;p&gt;Por estos problemas, vamos a poner una nueva configuración. Como la imagen oficial no necesita mas cambios, el &lt;em&gt;Dockerfile&lt;/em&gt; se limitará a poner la configuración en su sitio, partiendo de la imagen base.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/multighost$ cat ghost_blog/Dockerfile 
FROM ghost
COPY config.js /usr/src/ghost/config.example.js
gerard@sirius:~/docker/multighost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como no quiero crear una configuración e imagen para cada instancia de &lt;strong&gt;Ghost&lt;/strong&gt;, voy a poner todas las partes diferentes en variables de entorno. El encargado de pasar estas variables de entorno va a ser el fichero &lt;em&gt;docker-compose.yml&lt;/em&gt;, aunque se podría hacer a mano. El mismo intérprete de &lt;strong&gt;nodejs&lt;/strong&gt; permite acceder a las mismas en el fichero &lt;em&gt;config.js&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/multighost$ cat ghost_blog/config.js 
var &lt;span class="nv"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
    config&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    production: &lt;span class="o"&gt;{&lt;/span&gt;
        url: process.env&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GHOST_URL&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,
        mail: &lt;span class="o"&gt;{}&lt;/span&gt;,
        database: &lt;span class="o"&gt;{&lt;/span&gt;
            client: &lt;span class="s1"&gt;&amp;#39;sqlite3&amp;#39;&lt;/span&gt;,
            connection: &lt;span class="o"&gt;{&lt;/span&gt;
                filename: path.join&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;/content/data/ghost.db&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;,
            debug: &lt;span class="nb"&gt;false&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        server: &lt;span class="o"&gt;{&lt;/span&gt;
            host: &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;,
            port: &lt;span class="s1"&gt;&amp;#39;2368&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        paths: &lt;span class="o"&gt;{&lt;/span&gt;
            contentPath: path.join&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;/content/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

module.exports &lt;span class="o"&gt;=&lt;/span&gt; config&lt;span class="p"&gt;;&lt;/span&gt;
gerard@sirius:~/docker/multighost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;La suerte en este caso es que solo hay una parte variable, que es la URL de nuestro sitio.&lt;/p&gt;
&lt;h2&gt;La imagen del proxy HTTP&lt;/h2&gt;
&lt;p&gt;Esta imagen es la de nuestro representante. Va a estar mapeada en el puerto 80 de nuestro servidor y va a recibir todas las peticiones que se nos hagan. Luego las enviará al contenedor responsable y devolverá la respuesta que este genera al usuario final. Podéis pensar en él como un policía de tráfico.&lt;/p&gt;
&lt;p&gt;Nuevamente vamos a tirar de la reusabilidad, definiendo el comportamiento de este &lt;em&gt;proxy&lt;/em&gt; mediante variables de entorno, que nos va a evitar reconstruirlo cada vez que añadamos mas &lt;em&gt;blogs&lt;/em&gt;. La técnica de las plantillas para su configuración se vio en &lt;a href="https://www.linuxsysadmin.ml/2016/09/imagenes-docker-reusables-mediante-configuraciones-dinamicas.html"&gt;otro artículo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hacemos un &lt;em&gt;Dockerfile&lt;/em&gt; propio, partiendo de una imagen mínima, a la que instalaremos &lt;strong&gt;nginx&lt;/strong&gt; y sus configuraciones.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/multighost$ cat proxy/Dockerfile 
FROM alpine:3.4
RUN apk add --no-cache nginx &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    ln -s /dev/stdout /var/log/nginx/access.log &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    ln -s /dev/stderr /var/log/nginx/error.log &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    mkdir /run/nginx
COPY nginx.conf /etc/nginx/
COPY generate_configs.sh entrypoint.sh /
ENTRYPOINT &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/entrypoint.sh&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
gerard@sirius:~/docker/multighost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Solo falta poner la configuración general, el punto de acceso al contenedor y el generador de configuraciones específicas según las variables de entorno.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/multighost$ cat proxy/nginx.conf 
worker_processes  &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
events &lt;span class="o"&gt;{&lt;/span&gt;
    worker_connections  &lt;span class="m"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
http &lt;span class="o"&gt;{&lt;/span&gt;
    include mime.types&lt;span class="p"&gt;;&lt;/span&gt;
    default_type application/octet-stream&lt;span class="p"&gt;;&lt;/span&gt;
    sendfile on&lt;span class="p"&gt;;&lt;/span&gt;
    keepalive_timeout &lt;span class="m"&gt;65&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    include conf.d/*&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
gerard@sirius:~/docker/multighost$ cat proxy/generate_configs.sh 
&lt;span class="c1"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; LINE in &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DOMAINS&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/;/ /g&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;DOMAIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$LINE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d, -f1&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;BACKEND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$LINE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d, -f2&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;\&lt;/span&gt;
&lt;span class="s2"&gt;server {&lt;/span&gt;
&lt;span class="s2"&gt;    listen 80;&lt;/span&gt;
&lt;span class="s2"&gt;    server_name &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DOMAIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;&lt;/span&gt;
&lt;span class="s2"&gt;    location / {&lt;/span&gt;
&lt;span class="s2"&gt;        proxy_pass http://&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BACKEND&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:2368;&lt;/span&gt;
&lt;span class="s2"&gt;    }&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt; /etc/nginx/conf.d/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DOMAIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
gerard@sirius:~/docker/multighost$ cat proxy/entrypoint.sh 
&lt;span class="c1"&gt;#!/bin/sh&lt;/span&gt;

/generate_configs.sh
&lt;span class="nb"&gt;exec&lt;/span&gt; /usr/sbin/nginx -g &lt;span class="s2"&gt;&amp;quot;daemon off;&amp;quot;&lt;/span&gt;
gerard@sirius:~/docker/multighost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como apunte, cabe decir que la configuración se genera a partir de la variable de entorno DOMAINS, que no es otra cosa que pares de dominio y &lt;em&gt;backend&lt;/em&gt; (separados por una coma). Estos pares se separan de otros pares mediante el uso de un punto y coma.&lt;/p&gt;
&lt;h2&gt;Declarando el entorno&lt;/h2&gt;
&lt;p&gt;Vamos a suponer que tenemos dos dominios &lt;em&gt;ghost1.my&lt;/em&gt; y &lt;em&gt;ghost2.my&lt;/em&gt;. Como no los tengo de verdad, he usado el fichero &lt;em&gt;/etc/hosts&lt;/em&gt; para que acaben en mi local, asignándoles la dirección IP 127.0.0.1.&lt;/p&gt;
&lt;p&gt;Vamos a tener que declarar un servicio de &lt;em&gt;proxy&lt;/em&gt; y dos de &lt;strong&gt;ghost&lt;/strong&gt;. El motivo es porque todos los contenedores del mismo servicio heredan las mismas variables de entorno, con lo que eso de &lt;em&gt;escalar&lt;/em&gt; no vale. Vamos a llamar a estos servicios &lt;em&gt;ghost1&lt;/em&gt; y &lt;em&gt;ghost2&lt;/em&gt;, aunque el nombre es arbitrario.&lt;/p&gt;
&lt;p&gt;Otro tema puntiagudo son los nombres de los &lt;em&gt;backends&lt;/em&gt;. De acuerdo con la convención usada por &lt;strong&gt;docker-compose&lt;/strong&gt;, una instancia se llama {carpeta contenedora}_{nombre del servicio}_{numero de instancia}. Eso significa que los contenedores de los dos &lt;em&gt;blogs&lt;/em&gt; van a llamarse &lt;em&gt;multighost_ghost1_1&lt;/em&gt; y &lt;em&gt;multighost_ghost2_1&lt;/em&gt; respectivamente.&lt;/p&gt;
&lt;p&gt;El &lt;em&gt;docker-compose.yml&lt;/em&gt; no tiene ningún misterio en sí mismo. Solo hay que tener en cuenta que necesitamos indicar las variables de entorno necesarias y que el &lt;em&gt;proxy&lt;/em&gt; no se puede levantar antes que los &lt;em&gt;blogs&lt;/em&gt;. Esto es porque &lt;strong&gt;nginx&lt;/strong&gt; se cae si no puede resolver el nombre de las máquinas que forman parte de su configuración.&lt;/p&gt;
&lt;p&gt;Así quedaría el &lt;em&gt;docker-compose.yml&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/multighost$ cat docker-compose.yml 
version: &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;
services:
  proxy:
    build: proxy
    depends_on:
      - ghost1
      - ghost2
    links:
      - ghost1
      - ghost2
    ports:
      - &lt;span class="s2"&gt;&amp;quot;80:80&amp;quot;&lt;/span&gt;
    environment:
      - &lt;span class="nv"&gt;DOMAINS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ghost1.my,multighost_ghost1_1&lt;span class="p"&gt;;&lt;/span&gt;ghost2.my,multighost_ghost2_1
  ghost1:
    build: ghost_blog
    expose:
      - &lt;span class="m"&gt;2368&lt;/span&gt;
    environment:
      - &lt;span class="nv"&gt;NODE_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production
      - &lt;span class="nv"&gt;GHOST_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://ghost1.my
  ghost2:
    build: ghost_blog
    expose:
      - &lt;span class="m"&gt;2368&lt;/span&gt;
    environment:
      - &lt;span class="nv"&gt;NODE_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production
      - &lt;span class="nv"&gt;GHOST_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://ghost2.my
gerard@sirius:~/docker/multighost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Levantando el entorno&lt;/h2&gt;
&lt;p&gt;Esto no supone ningún misterio; usaremos los mismo comandos de &lt;strong&gt;docker-compose&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/multighost$ docker-compose up -d
Creating network &lt;span class="s2"&gt;&amp;quot;multighost_default&amp;quot;&lt;/span&gt; with the default driver
Building ghost1
Step &lt;span class="m"&gt;1&lt;/span&gt; : FROM ghost
 ---&amp;gt; c8799e5d02e1
Step &lt;span class="m"&gt;2&lt;/span&gt; : COPY config.js /usr/src/ghost/config.example.js
 ---&amp;gt; a59babea33ac
Removing intermediate container 4afdb804e150
Successfully built a59babea33ac
Creating multighost_ghost1_1
Building ghost2
Step &lt;span class="m"&gt;1&lt;/span&gt; : FROM ghost
 ---&amp;gt; c8799e5d02e1
Step &lt;span class="m"&gt;2&lt;/span&gt; : COPY config.js /usr/src/ghost/config.example.js
 ---&amp;gt; Using cache
 ---&amp;gt; a59babea33ac
Successfully built a59babea33ac
Creating multighost_ghost2_1
Building proxy
Step &lt;span class="m"&gt;1&lt;/span&gt; : FROM alpine:3.4
 ---&amp;gt; 7d23b3ca3463
Step &lt;span class="m"&gt;2&lt;/span&gt; : RUN apk add --no-cache nginx &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;     ln -s /dev/stdout /var/log/nginx/access.log &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;     ln -s /dev/stderr /var/log/nginx/error.log &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;     mkdir /run/nginx
 ---&amp;gt; Running in aa6bdbca5088
fetch http://dl-cdn.alpinelinux.org/alpine/v3.4/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.4/community/x86_64/APKINDEX.tar.gz
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;/3&lt;span class="o"&gt;)&lt;/span&gt; Installing nginx-common &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.10.1-r1&lt;span class="o"&gt;)&lt;/span&gt;
Executing nginx-common-1.10.1-r1.pre-install
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;/3&lt;span class="o"&gt;)&lt;/span&gt; Installing pcre &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;.38-r1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;/3&lt;span class="o"&gt;)&lt;/span&gt; Installing nginx &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.10.1-r1&lt;span class="o"&gt;)&lt;/span&gt;
Executing busybox-1.24.2-r11.trigger
OK: &lt;span class="m"&gt;6&lt;/span&gt; MiB in &lt;span class="m"&gt;14&lt;/span&gt; packages
 ---&amp;gt; 6cb42f2e3eb3
Removing intermediate container aa6bdbca5088
Step &lt;span class="m"&gt;3&lt;/span&gt; : COPY nginx.conf /etc/nginx/
 ---&amp;gt; f6f9c012d7e4
Removing intermediate container 881e06b92225
Step &lt;span class="m"&gt;4&lt;/span&gt; : COPY generate_configs.sh entrypoint.sh /
 ---&amp;gt; aa0c311dec7d
Removing intermediate container f5351cfa8268
Step &lt;span class="m"&gt;5&lt;/span&gt; : ENTRYPOINT /entrypoint.sh
 ---&amp;gt; Running in cf8151378f7e
 ---&amp;gt; 7451c8ccbfe9
Removing intermediate container cf8151378f7e
Successfully built 7451c8ccbfe9
Creating multighost_proxy_1
gerard@sirius:~/docker/multighost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y ya tenemos nuestro entorno funcional.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@sirius:~/docker/multighost$ docker-compose ps
       Name                   Command            State         Ports        
---------------------------------------------------------------------------
multighost_ghost1_1   /entrypoint.sh npm start   Up      &lt;span class="m"&gt;2368&lt;/span&gt;/tcp           
multighost_ghost2_1   /entrypoint.sh npm start   Up      &lt;span class="m"&gt;2368&lt;/span&gt;/tcp           
multighost_proxy_1    /entrypoint.sh             Up      &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:80-&amp;gt;80/tcp 
gerard@sirius:~/docker/multighost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Solo faltaría abrir en un navegador y apuntar a &lt;a href="http://ghost1.my/"&gt;http://ghost1.my/&lt;/a&gt; y a &lt;a href="http://ghost2.my/"&gt;http://ghost2.my/&lt;/a&gt; para ver los resultados.&lt;/p&gt;
&lt;p&gt;Es importante notar que la topología del entorno se declara solamente en el &lt;em&gt;docker-compose.yml&lt;/em&gt;; en caso de poner mas &lt;em&gt;blogs&lt;/em&gt;, no hay que tocar otros ficheros. Bastaría con declarar un &lt;em&gt;ghost3&lt;/em&gt; y modificar las variables de entorno del &lt;em&gt;proxy&lt;/em&gt;, para que genere su configuración.&lt;/p&gt;
&lt;h2&gt;Esto no es el final&lt;/h2&gt;
&lt;p&gt;A partir de aquí, se pueden aplicar muchas mejoras. Por ejemplo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Se podría levantar una base de datos &lt;strong&gt;mysql&lt;/strong&gt; (u otra) en el fichero &lt;em&gt;docker-compose.yml&lt;/em&gt;. El resto de instancias de &lt;strong&gt;Ghost&lt;/strong&gt; podrían conectarse a esta base de datos, pasando los parámetros de conexión como variables de entorno, con lo que habría que modificar el &lt;em&gt;config.js&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Otra posibilidad sería la de aprovecharnos de la capacidad de &lt;em&gt;escalar&lt;/em&gt; el número de contenedores. Modificando la variable de entorno &lt;em&gt;DOMAINS&lt;/em&gt; del &lt;em&gt;proxy&lt;/em&gt; y el &lt;em&gt;script&lt;/em&gt; generador de configuraciones &lt;em&gt;generate_configs.sh&lt;/em&gt;, se podría balancear cada dominio entre varios contenedores. Esto tendría sentido siempre y cuando la base de datos no sea &lt;strong&gt;sqlite&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La lista de mejoras podría crecer indefinidamente, pero por brevedad lo vamos a dejar como ejercicio para el lector.&lt;/p&gt;</content><category term="ghost"></category><category term="blog"></category><category term="virtual hosts"></category></entry><entry><title>Documentación fácil con markdown y strapdown.js</title><link href="https://www.linuxsysadmin.ml/2016/12/documentacion-facil-con-markdown-y-strapdownjs.html" rel="alternate"></link><published>2016-12-12T08:00:00+01:00</published><updated>2016-12-12T08:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2016-12-12:/2016/12/documentacion-facil-con-markdown-y-strapdownjs.html</id><summary type="html">&lt;p&gt;Últimamente estoy harto de realizar documentación en formato &lt;em&gt;word&lt;/em&gt;; pierdo la mayoría de mi tiempo dando formato, colores y maquetando el poco contenido que alcanzo a poner. Tras mucho meditar y, a partir de ahora, la voy a escribir en &lt;strong&gt;markdown&lt;/strong&gt;, y se lea en &lt;strong&gt;HTML&lt;/strong&gt;, como lenguaje mas usado …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Últimamente estoy harto de realizar documentación en formato &lt;em&gt;word&lt;/em&gt;; pierdo la mayoría de mi tiempo dando formato, colores y maquetando el poco contenido que alcanzo a poner. Tras mucho meditar y, a partir de ahora, la voy a escribir en &lt;strong&gt;markdown&lt;/strong&gt;, y se lea en &lt;strong&gt;HTML&lt;/strong&gt;, como lenguaje mas usado.&lt;/p&gt;
&lt;p&gt;Revisando por la web, he encontrado una librería magnífica que se llama &lt;a href="http://strapdownjs.com/"&gt;strapdown.js&lt;/a&gt;, que combina la elegancia de &lt;strong&gt;bootstrap&lt;/strong&gt; con un compilador &lt;strong&gt;markdown&lt;/strong&gt; de lado cliente. De esta forma, ni siquiera necesito hacer el paso previo de convertir mis ficheros &lt;strong&gt;markdown&lt;/strong&gt; a &lt;strong&gt;HTML&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Como plus extra, como el fichero se interpreta en el navegador, no necesito nada muy caprichoso en el servidor para servir las páginas; con un &lt;strong&gt;nginx&lt;/strong&gt; nos basta. Incluso podemos sacar partido de las &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, para tener &lt;em&gt;hosting&lt;/em&gt; gratuito.&lt;/p&gt;
&lt;p&gt;Las páginas son ficheros &lt;em&gt;.html&lt;/em&gt; estándares, con la única diferencia de que todo lo que vaya en el &lt;em&gt;tag xmp&lt;/em&gt; será interpretado como &lt;strong&gt;markdown&lt;/strong&gt;. Ahí pongo el esqueleto básico de una página.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sin título&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;xmp&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;spacelab&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;display:none;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;xmp&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://strapdownjs.com/v/0.2/strapdown.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;De hecho, el fichero incluido &lt;em&gt;strapdown.js&lt;/em&gt;, y el resto de ficheros necesarios se pueden alojar en nuestro mismo servidor, para una velocidad de acceso óptima.&lt;/p&gt;
&lt;h2&gt;Un ejemplo&lt;/h2&gt;
&lt;p&gt;Supongamos que queremos hacer una web de dos páginas: el índice y otra de ejemplo. Para ello vamos a poner dos ficheros &lt;strong&gt;HTML&lt;/strong&gt;, de la misma manera que lo haríamos para una página web normal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/www$ ls -1
example.html
index.html
gerard@aldebaran:~/www$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Empezaremos creando un &lt;em&gt;index.html&lt;/em&gt; con el siguiente contenido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Home page&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;xmp&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;spacelab&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;display:none;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
# Hello world!

You are in the Home page.

Navigation:

* [Home page](/)
* [Example page](/example.html)
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;xmp&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://strapdownjs.com/v/0.2/strapdown.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hemos puesto un enlace a la página de ejemplo, así que la vamos a crear también, para no tener enlaces rotos. Pongamos algo similar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Example page&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;xmp&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;spacelab&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;display:none;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
# This is an example

You are in the example page.

Navigation:

* [Home page](/)
* [Example page](/example.html)
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;xmp&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://strapdownjs.com/v/0.2/strapdown.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y no hay que hacer nada más. Solo hay que servir el contenido de esta carpeta. Podemos montar un servidor web o podemos sincronizarla a otro servidor que tengamos. Como no me quiero entretener con esto, y dado que no tiene nada que ver, me voy a limitar a levantar el servidor estándar que viene con &lt;strong&gt;python&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/www$ python -m SimpleHTTPServer
Serving HTTP on &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0 port &lt;span class="m"&gt;8000&lt;/span&gt; ...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y con esto solo nos queda verificar el resultado en &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;. Si miráis el código fuente de la página, veréis que se ve el lenguaje de marcado tal cual; incluso puede que veáis la página antes de su &lt;em&gt;renderizado&lt;/em&gt;, mientras se carga la librería &lt;strong&gt;javascript&lt;/strong&gt;. Al menos, habré cumplido con mi objetivo, que era el de escribir contenido sin perder tiempo en la maquetación.&lt;/p&gt;</content><category term="html"></category><category term="markdown"></category><category term="strapdownjs"></category></entry><entry><title>Creando un tema para Ghost</title><link href="https://www.linuxsysadmin.ml/2016/12/creando-un-tema-para-ghost.html" rel="alternate"></link><published>2016-12-05T08:00:00+01:00</published><updated>2016-12-05T08:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2016-12-05:/2016/12/creando-un-tema-para-ghost.html</id><summary type="html">&lt;p&gt;Ya vimos lo fácil que resulta de empezar un &lt;em&gt;blog&lt;/em&gt; con &lt;strong&gt;Ghost&lt;/strong&gt;. El tema que viene por defecto es muy simple y bastante legible, pero nos puede interesar cambiarlo, por ejemplo para poner publicidad. Existen temas de pago y gratuitos ya hechos, pero hoy voy a explicar como hacer uno …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ya vimos lo fácil que resulta de empezar un &lt;em&gt;blog&lt;/em&gt; con &lt;strong&gt;Ghost&lt;/strong&gt;. El tema que viene por defecto es muy simple y bastante legible, pero nos puede interesar cambiarlo, por ejemplo para poner publicidad. Existen temas de pago y gratuitos ya hechos, pero hoy voy a explicar como hacer uno.&lt;/p&gt;
&lt;p&gt;Vamos a partir de una instalación limpia de &lt;strong&gt;Ghost&lt;/strong&gt;, pero ejemplo como se indica en &lt;a href="https://www.linuxsysadmin.ml/2016/11/ghost-un-motor-para-hacer-blogs.html"&gt;otro artículo&lt;/a&gt;. Es especialmente importante desarrollar el tema en una instancia que corra en modo &lt;em&gt;development&lt;/em&gt;, así no va a &lt;em&gt;cachear&lt;/em&gt; las plantillas y nos va a ahorrar reiniciar el proceso.&lt;/p&gt;
&lt;p&gt;Es muy útil mapear la carpeta &lt;em&gt;/usr/lib/ghost/&lt;/em&gt; del contenedor a una carpeta local, si estamos usando &lt;strong&gt;Docker&lt;/strong&gt;. De esta manera podemos editar el tema cómodamente en nuestro sistema de ficheros y con las herramientas con las que más cómodos nos sintamos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace$ docker run -d -p &lt;span class="m"&gt;2368&lt;/span&gt;:2368 -v /home/gerard/workspace/content:/var/lib/ghost ghost
343d065878fb910a9f2b5b51be4a337d2e93db2e66cbff6800c2cb96a758f733
gerard@aldebaran:~/workspace$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Una vez hayamos creado el tema, nos lo podemos descargar y aplicarlo a nuestra instancia productiva, sin necesidad de reiniciar nada. A fin de cuentas, en el fichero &lt;em&gt;.zip&lt;/em&gt; solo hay plantillas y ficheros de respaldo del tema.&lt;/p&gt;
&lt;p&gt;Las plantillas están escritas en un motor de plantillas llamado &lt;a href="http://handlebarsjs.com/"&gt;Handlebars&lt;/a&gt;, y podemos encontrar un resume enfocado a &lt;strong&gt;Ghost&lt;/strong&gt; en &lt;a href="https://themes.ghost.org/docs/handlebars"&gt;la documentación&lt;/a&gt;. Como convención, todos los ficheros &lt;em&gt;.hbs&lt;/em&gt; en un tema de &lt;strong&gt;Ghost&lt;/strong&gt; son plantillas en este lenguaje.&lt;/p&gt;
&lt;p&gt;El uso de una instancia nueva nos viene muy bien, porque tenemos un índice y un &lt;em&gt;post&lt;/em&gt;, que nos permitirán ver como evoluciona nuestro &lt;em&gt;blog&lt;/em&gt;, a medida que avanzamos en el artículo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Índice -&amp;gt; &lt;a href="http://localhost:2368/"&gt;http://localhost:2368/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post -&amp;gt; &lt;a href="http://localhost:2368/welcome-to-ghost/"&gt;http://localhost:2368/welcome-to-ghost/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Un tema vacío&lt;/h2&gt;
&lt;p&gt;Vamos a crear una carpeta local temporal con los ficheros requeridos, que luego vamos a comprimir en fichero &lt;em&gt;.zip&lt;/em&gt; para poder cargarlo en la interfaz de administración. Una vez &lt;strong&gt;Ghost&lt;/strong&gt; ya reconozca nuestro tema, no vamos a tener que reiniciar ningún proceso nunca.&lt;/p&gt;
&lt;p&gt;De acuerdo a la &lt;a href="https://themes.ghost.org/docs/structure"&gt;documentación de Ghost&lt;/a&gt;, se necesitan un mínimo de 3 ficheros, que son el &lt;em&gt;package.json&lt;/em&gt;, &lt;em&gt;index.hbs&lt;/em&gt; y &lt;em&gt;post.hbs&lt;/em&gt;. Podemos encontrar la descripción de cada fichero en otro apartado de &lt;a href="https://themes.ghost.org/docs/templates"&gt;la documentación&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Voy a poner lo justo para que se pueda cargar el tema, aunque no sea muy funcional, para ir creciendo a partir de aquí.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace$ tree minimal_theme/
minimal_theme/
├── index.hbs
├── package.json
└── post.hbs

&lt;span class="m"&gt;0&lt;/span&gt; directories, &lt;span class="m"&gt;3&lt;/span&gt; files
gerard@aldebaran:~/workspace$ cat minimal_theme/package.json 
&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;minimal_theme&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;0.0.0&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
gerard@aldebaran:~/workspace$ cat minimal_theme/index.hbs 
INDEX
gerard@aldebaran:~/workspace$ cat minimal_theme/post.hbs 
POST
gerard@aldebaran:~/workspace$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para cargarlo cómodamente desde la interfaz web, lo necesitamos en formato &lt;em&gt;.zip&lt;/em&gt;. De hecho, la carpeta contenedora tampoco nos importa, así que la podemos borrar.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace$ &lt;span class="nb"&gt;cd&lt;/span&gt; minimal_theme/
gerard@aldebaran:~/workspace/minimal_theme$ zip -r ../minimal_theme.zip *
  adding: index.hbs &lt;span class="o"&gt;(&lt;/span&gt;stored &lt;span class="m"&gt;0&lt;/span&gt;%&lt;span class="o"&gt;)&lt;/span&gt;
  adding: package.json &lt;span class="o"&gt;(&lt;/span&gt;deflated &lt;span class="m"&gt;10&lt;/span&gt;%&lt;span class="o"&gt;)&lt;/span&gt;
  adding: post.hbs &lt;span class="o"&gt;(&lt;/span&gt;stored &lt;span class="m"&gt;0&lt;/span&gt;%&lt;span class="o"&gt;)&lt;/span&gt;
gerard@aldebaran:~/workspace/minimal_theme$ &lt;span class="nb"&gt;cd&lt;/span&gt; ..
gerard@aldebaran:~/workspace$ rm -R minimal_theme/
gerard@aldebaran:~/workspace$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Es importante mencionar que el fichero &lt;em&gt;.zip&lt;/em&gt; no debe contener la carpeta contenedora, sino sus ficheros. Para entendernos, los 3 ficheros deben quedar en la raíz del fichero comprimido.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace$ unzip -l minimal_theme.zip 
Archive:  minimal_theme.zip
  Length      Date    Time    Name
---------  ---------- -----   ----
        &lt;span class="m"&gt;6&lt;/span&gt;  &lt;span class="m"&gt;2016&lt;/span&gt;-09-23 &lt;span class="m"&gt;12&lt;/span&gt;:41   index.hbs
       &lt;span class="m"&gt;52&lt;/span&gt;  &lt;span class="m"&gt;2016&lt;/span&gt;-09-23 &lt;span class="m"&gt;12&lt;/span&gt;:41   package.json
        &lt;span class="m"&gt;5&lt;/span&gt;  &lt;span class="m"&gt;2016&lt;/span&gt;-09-23 &lt;span class="m"&gt;12&lt;/span&gt;:41   post.hbs
---------                     -------
       &lt;span class="m"&gt;63&lt;/span&gt;                     &lt;span class="m"&gt;3&lt;/span&gt; files
gerard@aldebaran:~/workspace$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lo cargamos desde la interfaz de administración, en &lt;em&gt;Settings / General / Themes / Upload a theme&lt;/em&gt;. La idea es que a partir de ahora vamos a editar el tema desde la carpeta &lt;em&gt;/var/lib/ghost/themes/minimal_theme/&lt;/em&gt;; como yo he usado un volumen local, lo voy a editar cómodamente desde &lt;em&gt;/home/gerard/workspace/content/themes/minimal_theme/&lt;/em&gt;. Cuando tengamos algo digno de ser guardado, lo podemos descargar en la misma sección de la interfaz administrativa, en formato &lt;em&gt;.zip&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;En este punto, deberíamos ver una página principal con el contenido "INDEX" y la página del &lt;em&gt;post&lt;/em&gt; de bienvenida como "POST", porque la plantilla no hace nada con los objetos que recibe de &lt;strong&gt;Ghost&lt;/strong&gt;. Vamos a continuar mejorando estas plantillas en los siguientes apartados.&lt;/p&gt;
&lt;h2&gt;Plantilla base e inyección de plantillas parciales&lt;/h2&gt;
&lt;p&gt;Las plantillas deberían sacar contenido HTML. Como ya sabemos, hay muchos elementos comunes que se van a repetir en todas las plantillas, por ejemplo, los &lt;em&gt;tags&lt;/em&gt; propios de HTML, como el &lt;em&gt;&amp;lt;html&amp;gt;&lt;/em&gt;, el &lt;em&gt;&amp;lt;head&amp;gt;&lt;/em&gt; o el &lt;em&gt;&amp;lt;body&amp;gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La solución mas elegante para este problema es la herencia de plantillas. La idea es que nuestra plantilla se va a insertar en una mas general, de forma que todas tengan un esqueleto común.&lt;/p&gt;
&lt;p&gt;También tenemos la opción de tener trozos de plantilla preparados para ser incluidos en otras plantillas, por ejemplo, la cabecera, el código de seguimiento o el contador de visitas. Estos trozos se llaman &lt;em&gt;partials&lt;/em&gt; y tienen una carpeta con el mismo nombre.&lt;/p&gt;
&lt;p&gt;Para ver como funcionan ambos, vamos a crear un esqueleto HTML. Este esqueleto va a incluir un &lt;em&gt;partial&lt;/em&gt; con la cabecera del &lt;em&gt;blog&lt;/em&gt;. De esta forma conseguimos separar conceptos, para que sea mas legible y mas fácil de modificar a &lt;em&gt;posteriori&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Para ello vamos a crear nuevos ficheros, que son la plantilla base &lt;em&gt;default.hbs&lt;/em&gt; y la plantilla de la cabecera en &lt;em&gt;partials/header.hbs&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ tree
.
├── partials
│   └── header.hbs
├── default.hbs
├── index.hbs
├── package.json
└── post.hbs

&lt;span class="m"&gt;1&lt;/span&gt; directory, &lt;span class="m"&gt;5&lt;/span&gt; files
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El primer paso consiste en indicar a las plantillas antes creadas que queremos que hereden de la plantilla &lt;em&gt;default&lt;/em&gt;, con el símbolo &lt;code&gt;{{!&amp;lt; default}}&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat index.hbs 
&lt;span class="o"&gt;{{&lt;/span&gt;!&amp;lt; default&lt;span class="o"&gt;}}&lt;/span&gt;

INDEX
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat post.hbs 
&lt;span class="o"&gt;{{&lt;/span&gt;!&amp;lt; default&lt;span class="o"&gt;}}&lt;/span&gt;

POST
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lo siguiente es escribir una plantilla &lt;em&gt;default.hbs&lt;/em&gt;. Esta plantilla debe contener la expresión &lt;em&gt;handlebars&lt;/em&gt; &lt;code&gt;{{{body}}}&lt;/code&gt;, que es donde se va a insertar la plantilla real.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat default.hbs 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;es&amp;quot;&lt;/span&gt;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt;
&lt;span class="o"&gt;{{&lt;/span&gt;ghost_head&lt;span class="o"&gt;}}&lt;/span&gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
&lt;span class="o"&gt;{{&lt;/span&gt;&amp;gt; header&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;{{{&lt;/span&gt;body&lt;span class="o"&gt;}}}&lt;/span&gt;
&lt;span class="o"&gt;{{&lt;/span&gt;ghost_foot&lt;span class="o"&gt;}}&lt;/span&gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos a fijarnos en 3 expresiones nuevas, que son &lt;code&gt;{{&amp;gt; header}}&lt;/code&gt;, &lt;code&gt;{{ghost_head}}&lt;/code&gt; y &lt;code&gt;{{ghost_foot}}&lt;/code&gt;. La primera sirve para insertar un &lt;em&gt;partial&lt;/em&gt;, que va a ser el resultado de procesar &lt;em&gt;partials/header.hbs&lt;/em&gt;. Las otras dos, aunque no son estrictamente necesarias, son recomendadas por la documentación de &lt;strong&gt;Ghost&lt;/strong&gt;. Básicamente incluyen algunos &lt;em&gt;metatags&lt;/em&gt; y cualquier &lt;em&gt;snippet&lt;/em&gt; que pongamos como &lt;em&gt;Code Injection&lt;/em&gt; en el panel de administración web.&lt;/p&gt;
&lt;p&gt;Solo faltaría poner algo de código en el &lt;em&gt;partial&lt;/em&gt; de la cabecera para que sea útil incluirlo. Vamos a pecar otra vez de simplicidad.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat partials/header.hbs 
&amp;lt;h1&amp;gt;Title&amp;lt;/h1&amp;gt;
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;AVISO&lt;/strong&gt;: Si miramos el &lt;em&gt;blog&lt;/em&gt; ahora, veremos que da un error 500. Esto es debido a que &lt;strong&gt;Ghost&lt;/strong&gt; no ha cargado los nuevos ficheros. Como solución, basta con activar otro tema, y volver a activar el nuestro.&lt;/p&gt;
&lt;h2&gt;Usando variables en las plantillas&lt;/h2&gt;
&lt;p&gt;Cada plantilla dispone de sus variables para que las usemos. Algunas de las variables están disponibles para todas las plantillas. De esta forma podemos generar contenido HTML real a partir de lo que hay en la base de datos de &lt;strong&gt;Ghost&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Vamos a empezar con el título del &lt;em&gt;blog&lt;/em&gt;, visible en el &lt;em&gt;tag&lt;/em&gt; &lt;code&gt;title&lt;/code&gt; de la plantilla &lt;em&gt;default.hbs&lt;/em&gt; y en la cabecera &lt;em&gt;partials/header.hbs&lt;/em&gt;. Para poner el título real del &lt;em&gt;blog&lt;/em&gt; (tal como se define en la interfaz de administración), vamos a usar la variable &lt;code&gt;{{@blog.title}}&lt;/code&gt;. Podéis encontrar todas las variables disponibles en la documentación.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat default.hbs 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;es&amp;quot;&lt;/span&gt;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;title&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt;@blog.title&lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/title&amp;gt;
&lt;span class="o"&gt;{{&lt;/span&gt;ghost_head&lt;span class="o"&gt;}}&lt;/span&gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
&lt;span class="o"&gt;{{&lt;/span&gt;&amp;gt; header&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;{{{&lt;/span&gt;body&lt;span class="o"&gt;}}}&lt;/span&gt;
&lt;span class="o"&gt;{{&lt;/span&gt;ghost_foot&lt;span class="o"&gt;}}&lt;/span&gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat partials/header.hbs 
&amp;lt;h1&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt;@blog.title&lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/h1&amp;gt;
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para las otras plantillas, el truco consiste en localizar que variables tenemos disponibles. Podemos encontrar el contexto para cada plantilla en la barra lateral de la configuración, en el &lt;em&gt;Context Reference&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;En el caso de la plantilla &lt;em&gt;index.hbs&lt;/em&gt;, podemos mirar en &lt;a href="https://themes.ghost.org/docs/index-context"&gt;su contexto&lt;/a&gt;. De ahí se deduce que tenemos una variable &lt;em&gt;posts&lt;/em&gt; que solo tenemos que iterar para listar cada uno, de la forma que mas nos guste. Siguiendo el enlace a &lt;a href="https://themes.ghost.org/docs/post-context#post-object-attributes"&gt;post object&lt;/a&gt;, podemos ver qué campos hay para dibujar en la plantilla. Vamos a utilizar el &lt;em&gt;title&lt;/em&gt; y el &lt;em&gt;excerpt&lt;/em&gt; (título del &lt;em&gt;post&lt;/em&gt; y un resumen del mismo).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat index.hbs 
&lt;span class="o"&gt;{{&lt;/span&gt;!&amp;lt; default&lt;span class="o"&gt;}}&lt;/span&gt;

&lt;span class="o"&gt;{{&lt;/span&gt;&lt;span class="c1"&gt;#foreach posts}}&lt;/span&gt;
&amp;lt;h2&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt;title&lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt;excerpt&lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/p&amp;gt;
&lt;span class="o"&gt;{{&lt;/span&gt;/foreach&lt;span class="o"&gt;}}&lt;/span&gt;
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Simple, pero suficiente. Por brevedad, no se ha incluido ningún trato del la variable &lt;code&gt;{{pagination}}&lt;/code&gt;. Si hacéis temas en el futuro, vais a tener que utilizarla.&lt;/p&gt;
&lt;p&gt;La plantilla &lt;em&gt;post.hbs&lt;/em&gt;, de similar forma, obtiene la variable &lt;em&gt;post&lt;/em&gt; y un ejemplo de como iterarla. Su documentación de contexto está &lt;a href="https://themes.ghost.org/docs/post-context"&gt;aquí&lt;/a&gt;. Vamos a pintar el título del artículo y su contenido (&lt;em&gt;title&lt;/em&gt; y &lt;em&gt;content&lt;/em&gt; respectivamente).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat post.hbs 
&lt;span class="o"&gt;{{&lt;/span&gt;!&amp;lt; default&lt;span class="o"&gt;}}&lt;/span&gt;

&lt;span class="o"&gt;{{&lt;/span&gt;&lt;span class="c1"&gt;#post}}&lt;/span&gt;
&amp;lt;h2&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt;title&lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/h2&amp;gt;
&lt;span class="o"&gt;{{&lt;/span&gt;content&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;{{&lt;/span&gt;/post&lt;span class="o"&gt;}}&lt;/span&gt;      
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nuevamente, un ejemplo simple y breve; no soy diseñador gráfico. Pero se entiende, ¿no?&lt;/p&gt;
&lt;h2&gt;Hojas de estilo, javascript y otros ficheros auxiliares&lt;/h2&gt;
&lt;p&gt;Cuando escribimos un tema, muchas veces necesitamos de otros ficheros, mas allá del contenido HTML. En la jerga de &lt;strong&gt;Ghost&lt;/strong&gt; se llaman &lt;em&gt;assets&lt;/em&gt; y nos ofrece una forma muy fácil de hacerlo. Tenemos un &lt;em&gt;helper&lt;/em&gt; llamado &lt;em&gt;asset&lt;/em&gt; que podemos usar. Un &lt;em&gt;asset&lt;/em&gt; puede ser una hoja de estilo, un fichero &lt;em&gt;javascript&lt;/em&gt;, una imagen, una fuente y en general, cualquier tipo de recurso.&lt;/p&gt;
&lt;p&gt;Para demostrar como se usa, vamos a incluir una hoja de estilo en nuestro tema. Como queremos que esté disponible en todas las páginas, la podemos poner en la plantilla base. La idea es que va a ser el código HTML normal, pero en vez de dar la ruta nosotros, vamos a poner &lt;code&gt;{{asset "css/style.css"}}&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat default.hbs 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;es&amp;quot;&lt;/span&gt;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;title&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt;@blog.title&lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/title&amp;gt;
    &amp;lt;link &lt;span class="nv"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{{asset &amp;quot;&lt;/span&gt;css/style.css&lt;span class="s2"&gt;&amp;quot;}}&amp;quot;&lt;/span&gt; /&amp;gt;
&lt;span class="o"&gt;{{&lt;/span&gt;ghost_head&lt;span class="o"&gt;}}&lt;/span&gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
&lt;span class="o"&gt;{{&lt;/span&gt;&amp;gt; header&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;{{{&lt;/span&gt;body&lt;span class="o"&gt;}}}&lt;/span&gt;
&lt;span class="o"&gt;{{&lt;/span&gt;ghost_foot&lt;span class="o"&gt;}}&lt;/span&gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como le hemos indicado que queremos el &lt;em&gt;asset&lt;/em&gt; localizado en &lt;em&gt;css/style.css&lt;/em&gt;, tenemos que crear esta estructura dentro de la carpeta &lt;em&gt;assets&lt;/em&gt;, que crearemos también si no la tenemos. El fichero &lt;em&gt;.css&lt;/em&gt; va a ser bastante simple, para no aburrir con detalles de diseño.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@aldebaran:~/workspace/content/themes/minimal_theme$ cat assets/css/style.css 
body &lt;span class="o"&gt;{&lt;/span&gt;
    background-color: cyan&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
gerard@aldebaran:~/workspace/content/themes/minimal_theme$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sinceramente espero que seáis mejores en el diseño gráfico que yo... Aunque lo importante es que si miramos el &lt;em&gt;blog&lt;/em&gt;, se ha aplicado el estilo definido. Podéis añadir mas &lt;em&gt;assets&lt;/em&gt; hasta que os canséis de ello.&lt;/p&gt;
&lt;h2&gt;A partir de aquí...&lt;/h2&gt;
&lt;p&gt;Como detalle final, solo queda decir que podéis generar mas plantillas, que van a ser cargadas en el orden de preferencia, como se indica en &lt;a href="https://themes.ghost.org/docs/context-overview#section-context-table"&gt;la documentación&lt;/a&gt;. Fijaos en las columnas &lt;em&gt;URL&lt;/em&gt; y &lt;em&gt;Template&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Por ejemplo, la plantilla que se usa para la URL &lt;em&gt;/tag/ghost&lt;/em&gt; sería &lt;em&gt;tag-ghost.hbs&lt;/em&gt;; en caso de no haber dicha plantilla, se utilizaría &lt;em&gt;tag.hbs&lt;/em&gt;; en caso de fallar ambas (como es el caso de este tutorial), se utilizaría &lt;em&gt;index.hbs&lt;/em&gt; (que está porque es una de las requeridas).&lt;/p&gt;
&lt;p&gt;Ya tenéis todas las herramientas necesarias para escribir y para entender temas de &lt;strong&gt;Ghost&lt;/strong&gt;. Con un poco de esfuerzo y ganas, os puede quedar un tema propio genial.&lt;/p&gt;
&lt;p&gt;En este punto, me voy a la interfaz de administración, y me descargo mi tema, a modo de &lt;em&gt;backup&lt;/em&gt;. Si os interesa, os lo dejo &lt;a href="https://www.linuxsysadmin.ml/downloads/minimal_theme.zip"&gt;aquí&lt;/a&gt;.&lt;/p&gt;</content><category term="ghost"></category><category term="blog"></category><category term="tema"></category></entry><entry><title>Ghost: Un motor para hacer blogs</title><link href="https://www.linuxsysadmin.ml/2016/11/ghost-un-motor-para-hacer-blogs.html" rel="alternate"></link><published>2016-11-21T08:00:00+01:00</published><updated>2016-11-21T08:00:00+01:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2016-11-21:/2016/11/ghost-un-motor-para-hacer-blogs.html</id><summary type="html">&lt;p&gt;Hace tiempo que me recorre la idea de crear un motor genérico de &lt;em&gt;blogs&lt;/em&gt;. Son varias las veces que he empezado alguno aprovechando los &lt;em&gt;frameworks&lt;/em&gt;, especialmente de &lt;strong&gt;python&lt;/strong&gt;. Todas ellas han acabado en la papelera por falta de ganas. Finalmente me di por vencido y decidí utilizar algo ya hecho …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hace tiempo que me recorre la idea de crear un motor genérico de &lt;em&gt;blogs&lt;/em&gt;. Son varias las veces que he empezado alguno aprovechando los &lt;em&gt;frameworks&lt;/em&gt;, especialmente de &lt;strong&gt;python&lt;/strong&gt;. Todas ellas han acabado en la papelera por falta de ganas. Finalmente me di por vencido y decidí utilizar algo ya hecho.&lt;/p&gt;
&lt;p&gt;Prueba de mi pereza es este &lt;em&gt;blog&lt;/em&gt;, que está hecho con &lt;strong&gt;Pelican&lt;/strong&gt;, que es un generador de contenido estático, juntando un tema y un contenido. Como control de versiones usa &lt;strong&gt;git&lt;/strong&gt; y está alojado en &lt;strong&gt;Github Pages&lt;/strong&gt;. Para publicar hace falta crear el contenido, invocar algunos comandos para generar el contenido &lt;strong&gt;HTML&lt;/strong&gt; y levantar un servidor local para ver los cambios. Todo muy &lt;em&gt;techie&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;He seguido buscando para encontrar una solución con base de datos, que se rellene fácilmente mediante un formulario y que pueda utilizar cualquiera. Basta con mirar un poco por internet para ver que las soluciones con miles: desde los omnipresentes &lt;strong&gt;Wordpress&lt;/strong&gt; hasta los todopoderosos &lt;strong&gt;Drupal&lt;/strong&gt; y &lt;strong&gt;Joomla&lt;/strong&gt;, pasando por cosas mas esotéricas.&lt;/p&gt;
&lt;p&gt;La solución la encontré hace un par de meses; era bonita, simple y tenía material de soporte suficiente, sin ser agobiante. Se trata de &lt;a href="https://ghost.org/"&gt;Ghost&lt;/a&gt;, encontrando su repositorio en &lt;a href="https://github.com/TryGhost/Ghost"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La instalación es también muy simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Descargar la última versión de &lt;strong&gt;Ghost&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Descomprimir el fichero comprimido en la carpeta en donde lo queramos.&lt;/li&gt;
&lt;li&gt;Instalar las dependencias con &lt;em&gt;npm install --production&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Levantar el servicio con &lt;em&gt;npm start&lt;/em&gt; (desarrollo) o &lt;em&gt;npm start --production&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Y ya tenemos nuestro &lt;em&gt;blog&lt;/em&gt; visible en &lt;a href="http://localhost:2368/"&gt;http://localhost:2368/&lt;/a&gt; con su interfaz de administración en &lt;a href="http://localhost:2368/ghost/"&gt;http://localhost:2368/ghost/&lt;/a&gt;. Estos valores pueden cambiarse en el fichero &lt;em&gt;config.js&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;El problema de esta aproximación es que la versión de &lt;strong&gt;Ghost&lt;/strong&gt;, de &lt;strong&gt;NPM&lt;/strong&gt; y de &lt;strong&gt;NodeJS&lt;/strong&gt; son demasiado importantes, exigiendo versiones elevadas que no están en los repositorios oficiales de la mayoría de distribuciones. Lo pude instalar en una &lt;em&gt;Ubuntu 16.04&lt;/em&gt; y, aun así, el binario exigido &lt;em&gt;/usr/bin/node&lt;/em&gt; no se llamaba así, sino que estaba en &lt;em&gt;/usr/bin/nodejs&lt;/em&gt;. Esto se puede solucionar con un simple enlace simbólico, pero busca el error...&lt;/p&gt;
&lt;p&gt;Lo que realmente me llamó a probarlo es la facilidad adicional de tenerlo funcionando sin problemas, mediante una imágen de &lt;strong&gt;Docker&lt;/strong&gt; prefabricada en &lt;strong&gt;DockerHub&lt;/strong&gt;. De hecho la imagen es oficial, y la podéis encontrar en &lt;a href="https://hub.docker.com/_/ghost/"&gt;https://hub.docker.com/_/ghost/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Levantamos la imagen con el habitual y recomendado &lt;em&gt;docker run&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@janus:~$ docker run -d -p &lt;span class="m"&gt;2368&lt;/span&gt;:2368 ghost
6a0d4ed51f2b7c04b7b0c54cac44256d12fe7fa999f548314858ea5838faae73
gerard@janus:~$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esto nos da un &lt;strong&gt;Ghost&lt;/strong&gt; levantado en modo de &lt;em&gt;development&lt;/em&gt;. Si queremos levantarlo en modo &lt;em&gt;production&lt;/em&gt;, basta con añadir una variable de entorno &lt;em&gt;NODE_ENV=production&lt;/em&gt;. Tal como escribo este artículo, la configuración por defecto para producción está incompleta: falta la directiva &lt;em&gt;paths&lt;/em&gt; en la sección &lt;em&gt;production&lt;/em&gt;, aunque la podéis copiar tal cual de la sección &lt;em&gt;development&lt;/em&gt;. Las otras directivas las podéis editar según vuestras necesidades.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TRUCO&lt;/strong&gt;: si usáis &lt;strong&gt;docker&lt;/strong&gt;, no vale con poner una configuración adecuada en &lt;em&gt;/var/lib/ghost/config.js&lt;/em&gt;, porque entonces el instalador detecta que ya hay cosas y no copia el resto de ficheros en &lt;em&gt;/usr/src/ghost/&lt;/em&gt;. Vuestras configuraciones deberían reescribir el fichero &lt;em&gt;/usr/src/ghost/config.example.js&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@telesto:~/docker/custom_ghost$ cat Dockerfile 
FROM ghost
COPY config.js /usr/src/ghost/config.example.js
gerard@telesto:~/docker/custom_ghost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;TRUCO&lt;/strong&gt;: la configuración de &lt;strong&gt;Ghost&lt;/strong&gt; es un &lt;em&gt;script&lt;/em&gt; en &lt;strong&gt;NodeJS&lt;/strong&gt; y es capaz de leer las variables de entorno, por si queréis pasar algunas variables en &lt;em&gt;runtime&lt;/em&gt;, sin construir varias imágenes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@telesto:~/docker/custom_ghost$ cat config.js 
var &lt;span class="nv"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
    config&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    production: &lt;span class="o"&gt;{&lt;/span&gt;
        url: process.env&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GHOST_URL&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,
        mail: &lt;span class="o"&gt;{}&lt;/span&gt;,
        database: &lt;span class="o"&gt;{&lt;/span&gt;
            client: &lt;span class="s1"&gt;&amp;#39;sqlite3&amp;#39;&lt;/span&gt;,
            connection: &lt;span class="o"&gt;{&lt;/span&gt;
                filename: path.join&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;/content/data/ghost.db&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;,
            debug: &lt;span class="nb"&gt;false&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        server: &lt;span class="o"&gt;{&lt;/span&gt;
            host: &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;,
            port: &lt;span class="s1"&gt;&amp;#39;2368&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        paths: &lt;span class="o"&gt;{&lt;/span&gt;
            contentPath: path.join&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;/content/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

module.exports &lt;span class="o"&gt;=&lt;/span&gt; config&lt;span class="p"&gt;;&lt;/span&gt;
gerard@telesto:~/docker/custom_ghost$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Apuntamos nuestro navegador a la URL configurada, y ya tenemos un &lt;em&gt;blog&lt;/em&gt; funcional. Queda para el propietario ir a la sección de administración para añadir contenido, cambiar los temas y lo que haga falta, cómodamente desde la web.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ghost Blog" src="https://www.linuxsysadmin.ml/images/ghost_blog.jpg"&gt;&lt;/p&gt;
&lt;p&gt;La parte "mala" es que cada instancia de &lt;strong&gt;Ghost&lt;/strong&gt; es un proceso propio, que usa su propia dirección y su propio puerto. Si se quiere desplegar varios &lt;em&gt;blogs&lt;/em&gt; en el mismo servidor, podemos usar un &lt;strong&gt;nginx&lt;/strong&gt;, que los diferencie por el dominio solicitado mediante &lt;em&gt;virtualhosts&lt;/em&gt;; luego hacemos un &lt;em&gt;proxy_pass&lt;/em&gt; al puerto de verdad, y ya tenemos el servidor montado. Esto queda como material para otro artículo.&lt;/p&gt;</content><category term="ghost"></category><category term="blog"></category></entry><entry><title>Un escritorio con Archlinux</title><link href="https://www.linuxsysadmin.ml/2016/07/un-escritorio-con-archlinux.html" rel="alternate"></link><published>2016-07-25T08:00:00+02:00</published><updated>2016-07-25T08:00:00+02:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2016-07-25:/2016/07/un-escritorio-con-archlinux.html</id><summary type="html">&lt;p&gt;En &lt;a href="https://www.linuxsysadmin.ml/2016/04/un-escritorio-minimo-con-debian.html"&gt;otro articulo&lt;/a&gt; vimos como instalar &lt;strong&gt;Archlinux&lt;/strong&gt;. Como tantas otras distribuciones nos vale para servidor y como distribución de escritorio. Sin embargo, debido a su filosofía como &lt;em&gt;rolling release&lt;/em&gt;, puede asustarnos un poco como servidor; aunque tener un escritorio "a la última" es un caramelo que muy pocos podemos rechazar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En &lt;a href="https://www.linuxsysadmin.ml/2016/04/un-escritorio-minimo-con-debian.html"&gt;otro articulo&lt;/a&gt; vimos como instalar &lt;strong&gt;Archlinux&lt;/strong&gt;. Como tantas otras distribuciones nos vale para servidor y como distribución de escritorio. Sin embargo, debido a su filosofía como &lt;em&gt;rolling release&lt;/em&gt;, puede asustarnos un poco como servidor; aunque tener un escritorio "a la última" es un caramelo que muy pocos podemos rechazar.&lt;/p&gt;
&lt;p&gt;Vamos a instalar un escritorio basado en &lt;strong&gt;XFCE&lt;/strong&gt;, que es bueno, bonito y barato. Me encanta personalmente porque no usa muchos recursos, responde rápido y tiene muchas herramientas de configuración, a diferencia de otros, por ejemplo &lt;strong&gt;LXDE&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Empezaremos instalando la capa gráfica. Esto se consigue mediante el paquete &lt;strong&gt;xorg&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# pacman -S xorg&lt;/span&gt;
...
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Alternativamente, podemos instalar solamente el servidor gráfico y los &lt;em&gt;drivers&lt;/em&gt; necesarios. Esto es especialmente importante en &lt;strong&gt;Archlinux&lt;/strong&gt; porque los paquetes se actualizan muy a menudo, y por lo tanto, tener paquetes que no vamos a usar solo incrementa el tiempo del &lt;em&gt;update&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# pacman -S xorg-server xf86-input-mouse xf86-input-keyboard xf86-input-synaptics xf86-video-vesa&lt;/span&gt;
resolviendo dependencias…
:: Existen &lt;span class="m"&gt;4&lt;/span&gt; proveedores disponibles para libgl:
:: Repositorio extra
   &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; mesa-libgl  &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; nvidia-304xx-libgl  &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; nvidia-340xx-libgl  &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; nvidia-libgl

Introduzca un número &lt;span class="o"&gt;(&lt;/span&gt;por &lt;span class="nv"&gt;omisión&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;:
:: Existen &lt;span class="m"&gt;2&lt;/span&gt; proveedores disponibles para xf86-input-driver:
:: Repositorio extra
   &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xf86-input-evdev  &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xf86-input-libinput

Introduzca un número &lt;span class="o"&gt;(&lt;/span&gt;por &lt;span class="nv"&gt;omisión&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;:
buscando conflictos entre paquetes…
advertencia: bucle de dependencias detectado:
advertencia: harfbuzz será instalado antes que su dependencia freetype2

Paquetes &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;62&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; damageproto-1.2.1-3  elfutils-0.166-1  fixesproto-5.0-3  fontconfig-2.12.0-1  fontsproto-2.1.3-1  freetype2-2.6.3-1
              graphite-1:1.3.8-1  harfbuzz-1.2.7-1  inputproto-2.3.2-1  kbproto-1.0.7-1  libdrm-2.4.68-1  libepoxy-1.3.1-1
              libevdev-1.5.2-1  libfontenc-1.1.3-1  libomxil-bellagio-0.9.3-1  libpciaccess-0.13.4-1  libpng-1.6.23-1
              libtxc_dxtn-1.0.1-6  libunwind-1.1-3  libx11-1.6.3-1  libxau-1.0.8-2  libxcb-1.12-1  libxdamage-1.1.4-2
              libxdmcp-1.1.2-1  libxext-1.3.3-1  libxfixes-5.0.2-1  libxfont-1.5.1-1  libxi-1.7.6-1  libxkbfile-1.0.9-1
              libxml2-2.9.4+0+gbdec218-2  libxshmfence-1.2-1  libxtst-1.2.2-1  libxxf86vm-1.1.4-1  llvm-libs-3.8.0-1
              mesa-11.2.2-1  mesa-libgl-11.2.2-1  mtdev-1.1.5-1  pixman-0.34.0-1  recordproto-1.14.2-2  wayland-1.11.0-1
              xcb-proto-1.12-2  xextproto-7.3.0-1  xf86-input-evdev-2.10.3-1  xf86vidmodeproto-2.3.1-3  xkeyboard-config-2.18-1
              xorg-bdftopcf-1.0.5-1  xorg-font-util-1.3.1-1  xorg-font-utils-7.6-4  xorg-fonts-alias-1.0.3-1
              xorg-fonts-encodings-1.0.4-4  xorg-fonts-misc-1.0.3-4  xorg-mkfontdir-1.0.7-2  xorg-mkfontscale-1.1.2-1
              xorg-server-common-1.18.3-2  xorg-setxkbmap-1.3.1-1  xorg-xkbcomp-1.3.1-1  xproto-7.0.29-1
              xf86-input-keyboard-1.8.1-2  xf86-input-mouse-1.9.1-2  xf86-input-synaptics-1.8.99.1-1  xf86-video-vesa-2.3.4-2
              xorg-server-1.18.3-2

Tamaño total de la descarga:     &lt;span class="m"&gt;37&lt;/span&gt;,78 MiB
Tamaño total de la instalación:  &lt;span class="m"&gt;150&lt;/span&gt;,38 MiB

:: ¿Continuar con la instalación? &lt;span class="o"&gt;[&lt;/span&gt;S/n&lt;span class="o"&gt;]&lt;/span&gt; s
...
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Una vez tenemos el servidor gráfico, el siguiente paso es el escritorio que elijamos. Tras buscar el &lt;a href="https://www.archlinux.org/groups/"&gt;el índice de grupos&lt;/a&gt;, me decanté por &lt;strong&gt;XFCE&lt;/strong&gt;, aunque hay para todos los gustos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# pacman -S xfce4 xfce4-goodies&lt;/span&gt;
...
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si lo queréis un poco mas &lt;em&gt;minimal&lt;/em&gt;, solo haría falta el paquete &lt;strong&gt;xfce4&lt;/strong&gt;. Para ser breves, me limito a este solamente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# pacman -S xfce4&lt;/span&gt;
:: Hay &lt;span class="m"&gt;17&lt;/span&gt; miembros en el grupo xfce4:
:: Repositorio extra
   &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; exo  &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; garcon  &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; gtk-xfce-engine  &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; thunar  &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; thunar-volman  &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; tumbler  &lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfce4-appfinder  &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfce4-mixer
   &lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfce4-panel  &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfce4-power-manager  &lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfce4-session  &lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfce4-settings  &lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfce4-terminal  &lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfconf  &lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfdesktop
   &lt;span class="m"&gt;16&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfwm4  &lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; xfwm4-themes

Introduzca una selección &lt;span class="o"&gt;(&lt;/span&gt;por &lt;span class="nv"&gt;omisión&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;todos&lt;span class="o"&gt;)&lt;/span&gt;:
resolviendo dependencias…
buscando conflictos entre paquetes…

Paquetes &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;113&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; adwaita-icon-theme-3.20-2  alsa-lib-1.1.1-1  at-spi2-atk-2.20.1-2  at-spi2-core-2.20.2-1  atk-2.20.0-1
               avahi-0.6.32-2  cairo-1.14.6-1  cantarell-fonts-1:0.0.24-1  cdparanoia-10.2-5  colord-1.3.2-2
               compositeproto-0.4.2-3  dbus-glib-0.106-1  dconf-0.26.0-1  desktop-file-utils-0.22-2  gdk-pixbuf2-2.34.0-2
               glib-networking-2.48.2-1  gnome-icon-theme-3.12.0-3  gnome-icon-theme-symbolic-3.12.0-4
               gnome-themes-standard-3.20.2-1  gsettings-desktop-schemas-3.21.2-1  gstreamer0.10-0.10.36-4
               gstreamer0.10-base-0.10.36-3  gstreamer0.10-base-plugins-0.10.36-3  gtk-update-icon-cache-3.20.6-1  gtk2-2.24.30-2
               gtk3-3.20.6-1  hicolor-icon-theme-0.15-1  iso-codes-3.68-1  jasper-1.900.1-15  js17-17.0.0-3  json-glib-1.2.0-1
               lcms2-2.7-1  libcroco-0.6.11-1  libcups-2.1.4-1  libdaemon-0.14-3  libdatrie-0.2.10-1  libexif-0.6.21-2
               libgudev-230-1  libgusb-0.2.9-1  libice-1.0.9-1  libimobiledevice-1.2.0-3  libjpeg-turbo-1.5.0-1
               libkeybinder2-0.3.0-2  libnotify-0.7.6-2  libogg-1.3.2-1  libplist-1.12-4  libproxy-0.4.12-2  librsvg-2:2.40.16-1
               libsm-1.2.2-2  libsoup-2.54.1-1  libthai-0.1.24-1  libtheora-1.1.1-3  libtiff-4.0.6-2  libunique-1.1.6-6
               libusbmuxd-1.0.10-1  libvisual-0.4.0-6  libvorbis-1.3.5-1  libwnck-2.31.0-1  libxcomposite-0.4.4-2
               libxcursor-1.1.14-2  libxfce4ui-4.12.1-2  libxfce4util-4.12.1-1  libxft-2.3.2-1  libxinerama-1.1.3-2
               libxkbcommon-0.6.1-1  libxklavier-5.4-1  libxmu-1.1.2-1  libxrandr-1.5.0-1  libxrender-0.9.9-1  libxres-1.0.7-1
               libxt-1.1.5-1  libxv-1.0.10-1  nspr-4.12-1  orc-0.4.25-2  pango-1.40.1-1  perl-uri-1.71-1  polkit-0.113-4
               polkit-gnome-0.105-3  randrproto-1.5.0-1  renderproto-0.11.1-3  rest-0.8.0-1  shared-mime-info-1.6-2
               startup-notification-0.12-4  ttf-dejavu-2.35-1  upower-0.99.4-2  videoproto-2.3.3-1  vte-0.28.2-7
               vte-common-0.44.2-1  wayland-protocols-1.4-1  xcb-util-0.4.0-1  xineramaproto-1.2.1-3  xorg-iceauth-1.0.7-1
               xorg-xauth-1.0.9-1  xorg-xinit-1.3.4-4  xorg-xmodmap-1.0.9-1  xorg-xrdb-1.1.0-2  exo-0.10.7-2  garcon-0.4.0-1
               gtk-xfce-engine-2.10.1-1  thunar-1.6.10-3  thunar-volman-0.8.1-2  tumbler-0.1.31-1  xfce4-appfinder-4.12.0-4
               xfce4-mixer-4.11.0-3  xfce4-panel-4.12.0-2  xfce4-power-manager-1.4.4-2  xfce4-session-4.12.1-4
               xfce4-settings-4.12.0-4  xfce4-terminal-0.6.3-3  xfconf-4.12.0-4  xfdesktop-4.12.3-2  xfwm4-4.12.3-2
               xfwm4-themes-4.10.0-2

Tamaño total de la descarga:     &lt;span class="m"&gt;65&lt;/span&gt;,79 MiB
Tamaño total de la instalación:  &lt;span class="m"&gt;298&lt;/span&gt;,53 MiB

:: ¿Continuar con la instalación? &lt;span class="o"&gt;[&lt;/span&gt;S/n&lt;span class="o"&gt;]&lt;/span&gt; s
...
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pequeño inconveniente ante otras distribuciones, como &lt;strong&gt;Debian&lt;/strong&gt;, los paquetes no tienen tantas dependencias, dejando al usuario elegir lo que pone o no.&lt;/p&gt;
&lt;p&gt;Como requisito para tener algunas de las funcionalidades del escritorio, por ejemplo la papelera, es necesario instalar otros paquetes. En el caso concreto de la papelera, se necesita el paquete &lt;strong&gt;gvfs&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# pacman -S gvfs&lt;/span&gt;
resolviendo dependencias…
buscando conflictos entre paquetes…

Paquetes &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; fuse-2.9.6-1  gcr-3.20.0-1  libatasmart-0.19-3  libbluray-0.9.2-2  libcddb-1.3.2-4  libcdio-0.93-3
              libcdio-paranoia-10.2+0.93+1-2  libsecret-0.18.5-1  udisks2-2.1.7-1  gvfs-1.28.2-1

Tamaño total de la descarga:     &lt;span class="m"&gt;3&lt;/span&gt;,84 MiB
Tamaño total de la instalación:  &lt;span class="m"&gt;23&lt;/span&gt;,45 MiB

:: ¿Continuar con la instalación? &lt;span class="o"&gt;[&lt;/span&gt;S/n&lt;span class="o"&gt;]&lt;/span&gt; s
...
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El siguiente paso es el gestor de entrada. Podemos entrar mediante un &lt;em&gt;login&lt;/em&gt; texto, y escalar a gráficos con &lt;em&gt;startx&lt;/em&gt;, pero es mas bonito y cómodo usar un gestor gráfico como &lt;strong&gt;lightdm&lt;/strong&gt;. En caso de &lt;strong&gt;Archlinux&lt;/strong&gt;, no depende de ninguna librería gráfica, y hay que decidirlo por nosotros mismos. Puesto que &lt;strong&gt;XFCE&lt;/strong&gt; usa las librerías &lt;strong&gt;GTK&lt;/strong&gt;, vamos a aprovecharnos de ello.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# pacman -S lightdm lightdm-gtk-greeter&lt;/span&gt;
resolviendo dependencias…
buscando conflictos entre paquetes…

Paquetes &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; lightdm-1:1.18.1-2  lightdm-gtk-greeter-1:2.0.1-3

Tamaño total de la descarga:    &lt;span class="m"&gt;0&lt;/span&gt;,27 MiB
Tamaño total de la instalación:  &lt;span class="m"&gt;2&lt;/span&gt;,68 MiB

:: ¿Continuar con la instalación? &lt;span class="o"&gt;[&lt;/span&gt;S/n&lt;span class="o"&gt;]&lt;/span&gt; s
...
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Activamos el &lt;em&gt;login manager&lt;/em&gt; para que salte automáticamente en cada &lt;em&gt;boot&lt;/em&gt; de nuestro sistema, usando &lt;strong&gt;systemd&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# systemctl enable lightdm&lt;/span&gt;
Created symlink /etc/systemd/system/display-manager.service → /usr/lib/systemd/system/lightdm.service.
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y ya como detalles opcionales, vamos a habilitar el sonido y un gestor de redes, que nos van a hacer la vida mas fácil.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# pacman -S wicd wicd-gtk alsa-utils&lt;/span&gt;
resolviendo dependencias…
buscando conflictos entre paquetes…

Paquetes &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; ethtool-1:4.5-1  fftw-3.3.4-2  flac-1.3.1-3  libglade-2.6.4-5  libnl-3.2.27-1  libsamplerate-0.1.8-3
              libsndfile-1.0.26-1  net-tools-1.60.20130531git-1  pygobject2-devel-2.28.6-12  pygtk-2.24.0-6
              python-dbus-common-1.2.4-1  python2-2.7.11-3  python2-cairo-1.10.0-2  python2-dbus-1.2.4-1
              python2-gobject2-2.28.6-12  python2-urwid-1.3.1-2  rfkill-0.5-1  wireless_tools-30.pre9-1  wpa_supplicant-1:2.5-3
              alsa-utils-1.1.1-1  wicd-1.7.4-1  wicd-gtk-1.7.4-1

Tamaño total de la descarga:     &lt;span class="m"&gt;19&lt;/span&gt;,58 MiB
Tamaño total de la instalación:  &lt;span class="m"&gt;110&lt;/span&gt;,79 MiB

:: ¿Continuar con la instalación? &lt;span class="o"&gt;[&lt;/span&gt;S/n&lt;span class="o"&gt;]&lt;/span&gt; s
...
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El paquete &lt;strong&gt;wicd&lt;/strong&gt; usa un frontal para el escritorio, pero todas las operaciones delicadas se delegan a un &lt;em&gt;daemon&lt;/em&gt; que funciona en segundo plano. De forma similar a &lt;strong&gt;Redhat&lt;/strong&gt;, los servicios no se instalan preparados para arrancar, y hay que activarlos manualmente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# systemctl enable wicd&lt;/span&gt;
Created symlink /etc/systemd/system/dbus-org.wicd.daemon.service → /usr/lib/systemd/system/wicd.service.
Created symlink /etc/systemd/system/multi-user.target.wants/wicd.service → /usr/lib/systemd/system/wicd.service.
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El subsistema de sonido funciona solo, salvo por el hecho de que hay que inicializar el dispositivo, y guardar los niveles de audio, para que se puedan restablecer tras cada &lt;em&gt;reboot&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# alsactl init&lt;/span&gt;
alsactl: sysfs_init:48: sysfs path &lt;span class="s1"&gt;&amp;#39;/sys&amp;#39;&lt;/span&gt; is invalid

Found hardware: &lt;span class="s2"&gt;&amp;quot;ICH&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Analog Devices AD1980&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;AC97a:41445370&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x1028&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x0177&amp;quot;&lt;/span&gt;
Hardware is initialized using a generic method
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# alsactl store&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como paso final, vamos a necesitar un usuario con el que trabajar habitualmente, sin privilegios y sin la capacidad de romper nada.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# useradd -m gerard&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# passwd gerard&lt;/span&gt;
Introduzca la nueva contraseña de UNIX:
Vuelva a escribir la nueva contraseña de UNIX:
passwd: contraseña actualizada correctamente
&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finalmente podemos reiniciar la máquina, y ver como nos queda de bonito.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# reboot&lt;/span&gt;
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si todo ha salido bien, nos queda un escritorio de esta apariencia, que tendremos que personalizar a nuestro gusto.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Escritorio XFCE" src="https://www.linuxsysadmin.ml/images/escritorio-xfce-archlinux.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Y todo esto, con un consumo de recursos bastante escaso...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;gerard@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;$ free -m
              total        used        free      shared  buff/cache   
available
Mem:            &lt;span class="m"&gt;498&lt;/span&gt;          &lt;span class="m"&gt;97&lt;/span&gt;         &lt;span class="m"&gt;310&lt;/span&gt;           &lt;span class="m"&gt;1&lt;/span&gt;          &lt;span class="m"&gt;89&lt;/span&gt;         
&lt;span class="m"&gt;379&lt;/span&gt;
Swap:           &lt;span class="m"&gt;522&lt;/span&gt;           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;522&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;gerard@archlinux ~&lt;span class="o"&gt;]&lt;/span&gt;$ 
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="archlinux"></category><category term="escritorio"></category><category term="xfce"></category></entry><entry><title>Un escritorio mínimo con Debian</title><link href="https://www.linuxsysadmin.ml/2016/04/un-escritorio-minimo-con-debian.html" rel="alternate"></link><published>2016-04-25T08:00:00+02:00</published><updated>2016-04-25T08:00:00+02:00</updated><author><name>Gerard</name></author><id>tag:www.linuxsysadmin.ml,2016-04-25:/2016/04/un-escritorio-minimo-con-debian.html</id><summary type="html">&lt;p&gt;Harto de distribuciones para escritorio cargados con aplicaciones que no se usan, decidí que esta vez iba a instalar un escritorio de trabajo partiendo de una &lt;em&gt;Debian netinstall&lt;/em&gt;. El resto va a ser instalar las aplicaciones justas y necesarias para nuestro trabajo diario. En este artículo describo como lo hice …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Harto de distribuciones para escritorio cargados con aplicaciones que no se usan, decidí que esta vez iba a instalar un escritorio de trabajo partiendo de una &lt;em&gt;Debian netinstall&lt;/em&gt;. El resto va a ser instalar las aplicaciones justas y necesarias para nuestro trabajo diario. En este artículo describo como lo hice.&lt;/p&gt;
&lt;p&gt;Este tutorial se asume que ya tenemos la distribución instalada de una forma mínima, sin nada que sea innecesario. Vamos a instalar los paquetes que se necesiten para nuestro escritorio.&lt;/p&gt;
&lt;p&gt;Para practicar la instalación y probar variaciones, es recomendable hacerlo en una máquina virtual, por ejemplo, usando &lt;strong&gt;VirtualBox&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;En cuanto a los requisitos, vamos a partir de una distribución &lt;em&gt;Debian Jessie&lt;/em&gt; normal, con una cantidad de memoria tirando a poca, y con un disco también bastante escaso. El resultado es bastante ligero.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# cat /etc/debian_version
&lt;span class="m"&gt;8&lt;/span&gt;.4
root@kobayashi-maru:~# free -m
             total       used       free     shared    buffers     cached
Mem:           &lt;span class="m"&gt;500&lt;/span&gt;         &lt;span class="m"&gt;65&lt;/span&gt;        &lt;span class="m"&gt;435&lt;/span&gt;          &lt;span class="m"&gt;4&lt;/span&gt;          &lt;span class="m"&gt;6&lt;/span&gt;         &lt;span class="m"&gt;34&lt;/span&gt;
-/+ buffers/cache:         &lt;span class="m"&gt;23&lt;/span&gt;        &lt;span class="m"&gt;476&lt;/span&gt;
Swap:            &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt;
root@kobayashi-maru:~# df -h
S.ficheros     Tamaño Usados  Disp Uso% Montado en
/dev/sda1        &lt;span class="m"&gt;4&lt;/span&gt;,0G   600M  &lt;span class="m"&gt;3&lt;/span&gt;,2G  &lt;span class="m"&gt;16&lt;/span&gt;% /
udev              10M      &lt;span class="m"&gt;0&lt;/span&gt;   10M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev
tmpfs            101M   &lt;span class="m"&gt;4&lt;/span&gt;,4M   96M   &lt;span class="m"&gt;5&lt;/span&gt;% /run
tmpfs            251M      &lt;span class="m"&gt;0&lt;/span&gt;  251M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev/shm
tmpfs            &lt;span class="m"&gt;5&lt;/span&gt;,0M      &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;5&lt;/span&gt;,0M   &lt;span class="m"&gt;0&lt;/span&gt;% /run/lock
tmpfs            251M      &lt;span class="m"&gt;0&lt;/span&gt;  251M   &lt;span class="m"&gt;0&lt;/span&gt;% /sys/fs/cgroup
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Las buenas prácticas requieren separar algunas de las carpetas en particiones distintas, de forma que el disco raíz no se llene por el uso diario de los usuarios. Especialmente se recomienda asignar una partición o disco para la carpeta &lt;em&gt;/home/&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;El sistema de ventanas&lt;/h2&gt;
&lt;p&gt;Como primer paso, necesitamos el servidor de ventanas, que se encarga de mediar entre los &lt;em&gt;drivers&lt;/em&gt; y las aplicaciones. En la distribución utilizada, se utiliza &lt;strong&gt;xorg&lt;/strong&gt; para esta función.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install xorg
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esto nos va a instalar el servidor, y gracias al sistema de dependencias de &lt;em&gt;Debian&lt;/em&gt;, todos los drivers de entrada y de vídeo; esto añade muchos paquetes que seguramente no usaremos jamás, que necesitan irse actualizando y ocupan espacio en disco. En caso de querer reducir la cantidad de drivers instalados, y sabiendo los que necesitamos, podemos instalar los necesarios solamente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install xserver-xorg xserver-xorg-input-kbd xserver-xorg-input-mouse xserver-xorg-video-vesa
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En este caso, yo opté por este sistema, instalando el &lt;em&gt;driver&lt;/em&gt; de vídeo &lt;em&gt;vesa&lt;/em&gt;, que es el que funciona con &lt;strong&gt;VirtualBox&lt;/strong&gt; (este &lt;em&gt;driver&lt;/em&gt; funciona siempre). En el caso de mi ordenador, puse el &lt;em&gt;driver&lt;/em&gt; de vídeo &lt;em&gt;intel&lt;/em&gt; (que es la tarjeta gráfica que tengo) y añadí el &lt;em&gt;driver&lt;/em&gt; de entrada &lt;em&gt;synaptics&lt;/em&gt; (que gestiona el &lt;em&gt;touchpad&lt;/em&gt;).&lt;/p&gt;
&lt;h2&gt;El entorno de escritorio&lt;/h2&gt;
&lt;p&gt;En este apartado tenemos muchas posibilidades; el ecosistema de entornos de escritorio es grande, pudiendo elegir entre &lt;em&gt;GNOME&lt;/em&gt;, &lt;em&gt;KDE&lt;/em&gt;, &lt;em&gt;XFCE&lt;/em&gt;, &lt;em&gt;LXDE&lt;/em&gt; y otros tantos.&lt;/p&gt;
&lt;p&gt;Un entorno de escritorio que me gusta por su simplicidad es &lt;em&gt;LXDE&lt;/em&gt;, que se puede instalar con el paquete &lt;strong&gt;lxde&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install lxde
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En caso de no necesitar todos los paquetes, es posible instalar un conjunto menor de paquetes. Una selección bastante completa podría ser la siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install lxde-core lxappearance lxterminal lxtask
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sin embargo, este entorno de escritorio está muy limitado en cuando a herramientas de configuración, y yo preferí instalar &lt;em&gt;XFCE&lt;/em&gt;, que conseguí con los paquetes &lt;strong&gt;xfce4&lt;/strong&gt; y &lt;strong&gt;xfce4-goodies&lt;/strong&gt; (opcional; incluye algunos &lt;em&gt;plugins&lt;/em&gt; y aplicaciones extras).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install xfce4 xfce4-goodies
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Cargar el modo gráfico&lt;/h2&gt;
&lt;p&gt;El primer método consiste en trabajar en modo terminal, levantando manualmente el entorno gráfico invocando el comando &lt;strong&gt;startx&lt;/strong&gt;, que se encuentra en el paquete &lt;strong&gt;xinit&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install xinit
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esto no es cómodo para el usuario corriente; lo normal es tener una pantalla de &lt;em&gt;login&lt;/em&gt; para entrar en la sesión de escritorio. Nuevamente hay muchas alternativas, pero en nuestro caso hemos optado por poner el paquete &lt;strong&gt;lightdm&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install lightdm
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Otras utilidades&lt;/h2&gt;
&lt;p&gt;Dependiendo del uso que vayamos a hacer, es interesante que nuestro ordenador pueda reproducir sonidos y tenga un gestor de redes, tanto cableadas como &lt;em&gt;wifi&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;El primero consiste en usar &lt;em&gt;ALSA&lt;/em&gt;, y detectar la configuración de nuestro sonido, guardando dicha configuración para futuros reinicios de la máquina.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install alsa-utils
...
root@kobayashi-maru:~# alsactl init
Found hardware: &lt;span class="s2"&gt;&amp;quot;ICH&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SigmaTel STAC9700,83,84&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;AC97a:83847600&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x8086&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x0000&amp;quot;&lt;/span&gt;
Hardware is initialized using a generic method
root@kobayashi-maru:~# alsactl store
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para la parte del gestor de redes, hay nuevamente debate. Uno que me gusta y que cumple bien con su función es &lt;strong&gt;wicd&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install wicd
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Las aplicaciones&lt;/h2&gt;
&lt;p&gt;Las aplicaciones a instalar son un tema muy personal; cada usuario va a necesitar unos tipos de aplicaciones u otras. Incluso así, de las aplicaciones de un tipo dado, pueden haber diversas opciones.&lt;/p&gt;
&lt;p&gt;Estas aplicaciones se pueden ir instalando a &lt;em&gt;posteriori&lt;/em&gt;, tal como se vayan necesitando. Sin embargo, podemos poner aquellas que se van a usar seguro, como un navegador web, por ejemplo &lt;em&gt;Chromium&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install chromium
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y para los fans de &lt;em&gt;Firefox&lt;/em&gt;, también hay su alternativa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get install iceweasel
...
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Y finalmente, la magia&lt;/h2&gt;
&lt;p&gt;Podemos limpiar los paquetes descargados e instalados, mediante un &lt;em&gt;clean&lt;/em&gt; simple de &lt;strong&gt;apt-get&lt;/strong&gt;. Esto liberará algunos &lt;em&gt;megas&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# apt-get clean
root@kobayashi-maru:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Rebotamos nuestro ordenador, y dejamos que lo instalado tome el control del &lt;em&gt;boot&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@kobayashi-maru:~# reboot
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Iremos a parar a la pantalla de &lt;em&gt;login&lt;/em&gt;, y con un usuario adecuado deberíamos ver nuestro escritorio, tal como se muestra.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Escritorio XFCE" src="https://www.linuxsysadmin.ml/images/escritorio-xfce.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Ahora es tarea del usuario tunear el escritorio a su gusto, con paneles, &lt;em&gt;plugins&lt;/em&gt; y &lt;em&gt;wallpapers&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Un apunte sobre los recursos&lt;/h2&gt;
&lt;p&gt;Tras instalar todos los componentes, vemos que los recursos apenas han subido; lo que nos da una idea del tipo de &lt;em&gt;hardware&lt;/em&gt; que podemos usar.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gerard@kobayashi-maru:~$ df -h
S.ficheros     Tamaño Usados  Disp Uso% Montado en
/dev/sda1        &lt;span class="m"&gt;4&lt;/span&gt;,0G   &lt;span class="m"&gt;1&lt;/span&gt;,4G  &lt;span class="m"&gt;2&lt;/span&gt;,5G  &lt;span class="m"&gt;36&lt;/span&gt;% /
udev              10M      &lt;span class="m"&gt;0&lt;/span&gt;   10M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev
tmpfs            101M   &lt;span class="m"&gt;4&lt;/span&gt;,4M   96M   &lt;span class="m"&gt;5&lt;/span&gt;% /run
tmpfs            251M      &lt;span class="m"&gt;0&lt;/span&gt;  251M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev/shm
tmpfs            &lt;span class="m"&gt;5&lt;/span&gt;,0M   &lt;span class="m"&gt;4&lt;/span&gt;,0K  &lt;span class="m"&gt;5&lt;/span&gt;,0M   &lt;span class="m"&gt;1&lt;/span&gt;% /run/lock
tmpfs            251M      &lt;span class="m"&gt;0&lt;/span&gt;  251M   &lt;span class="m"&gt;0&lt;/span&gt;% /sys/fs/cgroup
tmpfs             51M   &lt;span class="m"&gt;4&lt;/span&gt;,0K   51M   &lt;span class="m"&gt;1&lt;/span&gt;% /run/user/110
tmpfs             51M   &lt;span class="m"&gt;4&lt;/span&gt;,0K   51M   &lt;span class="m"&gt;1&lt;/span&gt;% /run/user/1000
gerard@kobayashi-maru:~$ free -m
             total       used       free     shared    buffers     cached
Mem:           &lt;span class="m"&gt;500&lt;/span&gt;        &lt;span class="m"&gt;238&lt;/span&gt;        &lt;span class="m"&gt;262&lt;/span&gt;          &lt;span class="m"&gt;5&lt;/span&gt;         &lt;span class="m"&gt;15&lt;/span&gt;        &lt;span class="m"&gt;125&lt;/span&gt;
-/+ buffers/cache:         &lt;span class="m"&gt;96&lt;/span&gt;        &lt;span class="m"&gt;404&lt;/span&gt;
Swap:            &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt;
gerard@kobayashi-maru:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El disco ha aumentado en unos 900 mb y la memoria ha pasado de 23 a 96 mb, sin tener ninguna aplicación abierta.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CUIDADO&lt;/strong&gt;: Algunas aplicaciones necesitan mucho disco y también memoria. Depende de lo que se ponga, podemos pasar de unos requerimientos &lt;em&gt;hardware&lt;/em&gt; austeros, a una máquina que dejaría de juguete a un supercomputador...&lt;/p&gt;
&lt;p&gt;Para el uso que doy de mi &lt;em&gt;netbook&lt;/em&gt; (navegar, redacción de artículos, programación de &lt;em&gt;scripts&lt;/em&gt; y alguna sesión de &lt;em&gt;SSH&lt;/em&gt;), los 2gb de memoria me sobran; con 128 mb tendría suficiente.&lt;/p&gt;</content><category term="linux"></category><category term="debian"></category><category term="jessie"></category><category term="escritorio"></category><category term="xfce"></category></entry></feed>